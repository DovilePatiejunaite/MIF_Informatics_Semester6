%!PS-Adobe-2.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: lecture3.dvi
%%Pages: 5
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%EndComments
%DVIPSCommandLine: dvips -o lecture3.ps lecture3.dvi
%DVIPSParameters: dpi=300, comments removed
%DVIPSSource:  TeX output 1997.01.29:2146
%%BeginProcSet: tex.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]{ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}
if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 40258437 52099154 1000 300 300 (lecture3.dvi)
@start /Fa 26 123 df<60F0F06004047B830D>46 D<000FE0200070186001C0046003
0003E0060001E00E0000E01C00006038000060380000207800002070000020F0000000F0
000000F0000000F0000000F0000000F0000000F0000000F0000000700000207800002038
000020380000201C0000400E000040060000800300010001C0060000701800000FE0001B
1E7D9C21>67 D<FFFFFF000F000F000F0003000F0001000F0001000F0001800F0000800F
0000800F0080800F0080000F0080000F0080000F0180000FFF80000F0180000F0080000F
0080000F0080000F0080400F0000400F0000800F0000800F0000800F0001800F0001800F
0003000F000F00FFFFFF001A1C7D9B1F>69 D<FFF0FFF00F000F000F000F000F000F000F
000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F
FFFF000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F
000F000F000F000F000F000F000F000F000F00FFF0FFF01C1C7D9B22>72
D<FFF00FF00F0003C00F0003000F0002000F0004000F0008000F0010000F0060000F0080
000F0100000F0200000F0700000F0F80000F1780000F23C0000F43E0000F81E0000F00F0
000F00F8000F0078000F003C000F001E000F001F000F000F000F0007800F0007C00F0007
E0FFF01FF81D1C7D9B23>75 D<FFF8000F00000F00000F00000F00000F00000F00000F00
000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00040F00
040F00040F000C0F000C0F00080F00180F00380F00F8FFFFF8161C7D9B1C>I<FFFFC000
0F0078000F001C000F000E000F0007000F0007800F0007800F0007800F0007800F000780
0F0007000F000E000F001C000F0078000FFFC0000F0000000F0000000F0000000F000000
0F0000000F0000000F0000000F0000000F0000000F0000000F0000000F000000FFF00000
191C7D9B1F>80 D<FFFF80000F00F0000F0038000F001E000F000E000F000F000F000F00
0F000F000F000F000F000E000F001E000F0038000F00F0000FFF80000F01E0000F007000
0F0078000F003C000F003C000F003C000F003C000F003C000F003C000F003C080F003C08
0F001C080F001E10FFF00E10000003E01D1D7D9B21>82 D<03F0400C0CC01002C03001C0
6000C0E000C0E00040E00040E00040F00000F800007E00007FE0003FFC001FFF0007FF80
007F800007C00003E00001E00000E08000E08000E08000E0C000C0C000C0E00180D00300
CE060081F800131E7D9C19>I<7FFFFFC0700F01C0600F00C0400F0040400F0040C00F00
20800F0020800F0020800F0020000F0000000F0000000F0000000F0000000F0000000F00
00000F0000000F0000000F0000000F0000000F0000000F0000000F0000000F0000000F00
00000F0000000F0000001F800003FFFC001B1C7D9B21>I<002000007000007000007000
00B80000B80000B800011C00011C00031E00020E00020E0004070007FF00040700080380
0803801803C01801C03801C0FC07F815157F9419>97 D<FFFC001C07001C01C01C00E01C
00E01C00701C00701C00781C00781C00781C00781C00781C00781C00781C00701C00701C
00E01C00E01C01C01C0700FFFC0015157F941A>100 D<FFFF801C03801C00801C00801C
00401C00401C08401C08001C08001C18001FF8001C18001C08001C08201C08201C00201C
00601C00401C00C01C01C0FFFFC013157F9417>I<00FC200782600E01E01C00E0380060
780020700020F00020F00000F00000F00000F00FF8F000E0F000E07000E07800E03800E0
1C00E00E00E007836000FC2015157E941B>103 D<FF801C001C001C001C001C001C001C
001C001C001C001C001C001C001C001C001C001C001C001C00FF8009157F940D>105
D<FFC0001C00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C00
001C00001C00801C00801C00801C01801C01001C03001C0700FFFF0011157F9415>108
D<FE000FE01E000F00170017001700170017001700138027001380270011C0470011C047
0011C0470010E0870010E08700107107001071070010710700103A0700103A0700101C07
00101C0700381C0700FE083FE01B157F941F>I<FC03F81E00E01E004017004013804013
C04011C04010E040107040107040103840101C40101C40100E401007401007C01003C010
01C01000C03800C0FE004015157F9419>I<01F800070E000C03001C03803801C07801E0
7000E0F000F0F000F0F000F0F000F0F000F0F000F0F000F07000E07801E03801C01C0380
1E0780070E0001F80014157E941A>I<FFFC001C0F001C03801C03C01C03C01C03C01C03
C01C03C01C03801C0F001FFC001C00001C00001C00001C00001C00001C00001C00001C00
001C0000FF800012157F9417>I<FFF8001C0E001C07801C03801C03C01C03C01C03C01C
03801C07801C0E001FF8001C1C001C0E001C07001C07001C07001C07801C07841C07C41C
03CCFF80F816157F9419>114 D<1F1030F06030C030C010C010E000E0007E003FC01FE0
03F0007800380018801880188010C030F0608F800D157E9413>I<7FFFF0607030407010
407010807008807008807008007000007000007000007000007000007000007000007000
00700000700000700000700000700007FF0015157F9419>I<FF83F81C00E01C00401C00
401C00401C00401C00401C00401C00401C00401C00401C00401C00401C00401C00401C00
400C00C00E008006010003860000FC0015157F9419>I<FF01F83C00701C00601C00401C
00400E00800E008007010007010007010003820003820001C40001C40001C40000E80000
E80000700000700000700000200015157F9419>I<FFFEF01CC01CC0388038807080E000
E001C001C00380070007000E020E021C02380238067006701EFFFE0F157E9415>122
D E /Fb 39 122 df<387CFEFFFF7F3B03030306060C1C18702008117CA210>39
D<FFFCFFFCFFFCFFFC0E047F8C13>45 D<387CFEFEFE7C3807077C8610>I<0018000078
0001F800FFF800FFF80001F80001F80001F80001F80001F80001F80001F80001F80001F8
0001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F8
0001F80001F80001F80001F8007FFFE07FFFE013207C9F1C>49 D<03FC000FFF003C1FC0
7007E07C07F0FE03F0FE03F8FE03F8FE01F87C01F83803F80003F80003F00003F00007E0
0007C0000F80001F00003E0000380000700000E01801C0180380180700180E00380FFFF0
1FFFF03FFFF07FFFF0FFFFF0FFFFF015207D9F1C>I<00FE0007FFC00F07E01E03F03F03
F03F81F83F81F83F81F81F03F81F03F00003F00003E00007C0001F8001FE0001FF000007
C00001F00001F80000FC0000FC3C00FE7E00FEFF00FEFF00FEFF00FEFF00FC7E01FC7801
F81E07F00FFFC001FE0017207E9F1C>I<0000E00001E00003E00003E00007E0000FE000
1FE0001FE00037E00077E000E7E001C7E00187E00307E00707E00E07E00C07E01807E038
07E07007E0E007E0FFFFFFFFFFFF0007E00007E00007E00007E00007E00007E00007E000
FFFF00FFFF18207E9F1C>I<3000203E01E03FFFC03FFF803FFF003FFE003FF80033C000
30000030000030000030000031FC0037FF003E0FC03807E03003E00003F00003F00003F8
0003F83803F87C03F8FE03F8FE03F8FC03F0FC03F07007E03007C03C1F800FFF0003F800
15207D9F1C>I<000070000000007000000000F800000000F800000000F800000001FC00
000001FC00000003FE00000003FE00000003FE000000067F000000067F0000000C7F8000
000C3F8000000C3F800000181FC00000181FC00000301FE00000300FE00000700FF00000
6007F000006007F00000C007F80000FFFFF80001FFFFFC00018001FC00018001FC000300
01FE00030000FE00070000FF000600007F000600007F00FFE007FFF8FFE007FFF825227E
A12A>65 D<FFFFFF8000FFFFFFF00007F001F80007F000FC0007F0007E0007F0007E0007
F0007F0007F0007F0007F0007F0007F0007F0007F0007F0007F0007E0007F000FE0007F0
00FC0007F003F80007FFFFF00007FFFFF00007F001FC0007F0007E0007F0003F0007F000
3F8007F0001F8007F0001FC007F0001FC007F0001FC007F0001FC007F0001FC007F0001F
C007F0003F8007F0003F8007F0007F0007F001FE00FFFFFFF800FFFFFFC00022227EA128
>I<0003FE0080001FFF818000FF01E38001F8003F8003E0001F8007C0000F800F800007
801F800007803F000003803F000003807F000001807E000001807E00000180FE00000000
FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE000000007E
000000007E000001807F000001803F000001803F000003801F800003000F8000030007C0
00060003F0000C0001F800380000FF00F000001FFFC0000003FE000021227DA128>I<FF
FFFF8000FFFFFFF00007F003FC0007F0007E0007F0003F0007F0001F8007F0000FC007F0
0007E007F00007E007F00007F007F00003F007F00003F007F00003F007F00003F807F000
03F807F00003F807F00003F807F00003F807F00003F807F00003F807F00003F807F00003
F807F00003F007F00003F007F00003F007F00007E007F00007E007F0000FC007F0001F80
07F0003F0007F0007E0007F003FC00FFFFFFF000FFFFFF800025227EA12B>I<FFFFFFF8
FFFFFFF807F001F807F0007807F0003807F0001807F0001C07F0001C07F0000C07F0000C
07F0180C07F0180C07F0180007F0180007F0380007F0780007FFF80007FFF80007F07800
07F0380007F0180007F0180007F0180007F0180007F0000007F0000007F0000007F00000
07F0000007F0000007F0000007F00000FFFFC000FFFFC0001E227EA123>70
D<0003FE0040001FFFC0C0007F00F1C001F8003FC003F0000FC007C00007C00FC00003C0
1F800003C03F000001C03F000001C07F000000C07E000000C07E000000C0FE00000000FE
00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE000FFFFC7E00
0FFFFC7F00001FC07F00001FC03F00001FC03F00001FC01F80001FC00FC0001FC007E000
1FC003F0001FC001FC003FC0007F80E7C0001FFFC3C00003FF00C026227DA12C>I<FFFF
803FFCFFFF803FFC07F000038007F000070007F0000E0007F000180007F000300007F000
E00007F001C00007F003800007F007000007F00E000007F018000007F03C000007F0FC00
0007F1FE000007F3FF000007F77F000007FE3F800007F83FC00007F01FE00007F00FE000
07F007F00007F007F80007F003FC0007F001FC0007F001FE0007F000FF0007F0007F0007
F0003F8007F0003FC007F0001FE0FFFF81FFFEFFFF81FFFE27227EA12C>75
D<FFFFFE0000FFFFFFC00007F007F00007F001F80007F000FC0007F0007E0007F0007F00
07F0007F0007F0007F0007F0007F0007F0007F0007F0007F0007F0007E0007F000FC0007
F001F80007F007F00007FFFFC00007FFFF800007F00FE00007F007F00007F003F80007F0
01FC0007F001FC0007F001FC0007F001FC0007F001FC0007F001FC0007F001FC0007F001
FC0007F001FC0607F000FE0607F000FF0CFFFF803FF8FFFF800FF027227EA12A>82
D<01FE0207FF861F01FE3C007E7C001E78000E78000EF80006F80006FC0006FC0000FF00
00FFE0007FFF007FFFC03FFFF01FFFF80FFFFC03FFFE003FFE0003FE00007F00003F0000
3FC0001FC0001FC0001FE0001EE0001EF0003CFC003CFF00F8C7FFE080FF8018227DA11F
>I<FFFF803FFCFFFF803FFC07F000018007F000018007F000018007F000018007F00001
8007F000018007F000018007F000018007F000018007F000018007F000018007F0000180
07F000018007F000018007F000018007F000018007F000018007F000018007F000018007
F000018007F000018007F000018007F000018007F000018003F000030003F800030001F8
00060000FC000E00007E001C00003F80F800000FFFE0000001FF000026227EA12B>85
D<0FFC003FFF807E07C07E03E07E01E07E01F03C01F00001F00001F0003FF003FDF01FC1
F03F01F07E01F0FC01F0FC01F0FC01F0FC01F07E02F07E0CF81FF87F07E03F18167E951B
>97 D<FF000000FF0000001F0000001F0000001F0000001F0000001F0000001F0000001F
0000001F0000001F0000001F0000001F0000001F0FE0001F3FF8001FE07C001F803E001F
001F001F000F801F000F801F000FC01F000FC01F000FC01F000FC01F000FC01F000FC01F
000FC01F000FC01F000F801F001F801F801F001FC03E001EE07C001C3FF800180FC0001A
237EA21F>I<00FF8007FFE00F83F01F03F03E03F07E03F07C01E07C0000FC0000FC0000
FC0000FC0000FC0000FC00007C00007E00007E00003E00181F00300FC06007FFC000FF00
15167E9519>I<0001FE000001FE0000003E0000003E0000003E0000003E0000003E0000
003E0000003E0000003E0000003E0000003E0000003E0001FC3E0007FFBE000F81FE001F
007E003E003E007E003E007C003E00FC003E00FC003E00FC003E00FC003E00FC003E00FC
003E00FC003E00FC003E007C003E007C003E003E007E001F00FE000F83BE0007FF3FC001
FC3FC01A237EA21F>I<00FE0007FF800F87C01E01E03E01F07C00F07C00F8FC00F8FC00
F8FFFFF8FFFFF8FC0000FC0000FC00007C00007C00007E00003E00181F00300FC07003FF
C000FF0015167E951A>I<001FC0007FE000F1F001E3F003E3F007C3F007C1E007C00007
C00007C00007C00007C00007C000FFFE00FFFE0007C00007C00007C00007C00007C00007
C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007
C0003FFC003FFC00142380A211>I<01FE0F0007FFBF800F87C7801F03E7801E01E0003E
01F0003E01F0003E01F0003E01F0003E01F0001E01E0001F03E0000F87C0000FFF800009
FE000018000000180000001C0000001FFFE0000FFFF80007FFFE001FFFFF003C003F0078
000F80F0000780F0000780F0000780F000078078000F003C001E001F007C000FFFF80001
FFC00019217F951C>I<FF000000FF0000001F0000001F0000001F0000001F0000001F00
00001F0000001F0000001F0000001F0000001F0000001F0000001F07E0001F1FF8001F30
7C001F403C001F803E001F803E001F003E001F003E001F003E001F003E001F003E001F00
3E001F003E001F003E001F003E001F003E001F003E001F003E001F003E001F003E00FFE1
FFC0FFE1FFC01A237EA21F>I<1C003E007F007F007F003E001C00000000000000000000
0000000000FF00FF001F001F001F001F001F001F001F001F001F001F001F001F001F001F
001F001F001F001F00FFE0FFE00B247EA310>I<FF000000FF0000001F0000001F000000
1F0000001F0000001F0000001F0000001F0000001F0000001F0000001F0000001F000000
1F00FF801F00FF801F0038001F0060001F01C0001F0380001F0700001F0E00001F1C0000
1F7E00001FFF00001FCF00001F0F80001F07C0001F03E0001F01E0001F01F0001F00F800
1F007C001F003C00FFE0FFC0FFE0FFC01A237EA21E>107 D<FF00FF001F001F001F001F
001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F
001F001F001F001F001F001F001F001F001F00FFE0FFE00B237EA210>I<FF07F007F000
FF1FFC1FFC001F303E303E001F403E403E001F801F801F001F801F801F001F001F001F00
1F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F00
1F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F00
1F001F001F00FFE0FFE0FFE0FFE0FFE0FFE02B167E9530>I<FF07E000FF1FF8001F307C
001F403C001F803E001F803E001F003E001F003E001F003E001F003E001F003E001F003E
001F003E001F003E001F003E001F003E001F003E001F003E001F003E001F003E00FFE1FF
C0FFE1FFC01A167E951F>I<00FE0007FFC00F83E01E00F03E00F87C007C7C007C7C007C
FC007EFC007EFC007EFC007EFC007EFC007EFC007E7C007C7C007C3E00F81F01F00F83E0
07FFC000FE0017167E951C>I<FF0FE000FF3FF8001FE07C001F803E001F001F001F001F
801F001F801F000FC01F000FC01F000FC01F000FC01F000FC01F000FC01F000FC01F000F
C01F001F801F001F801F803F001FC03E001FE0FC001F3FF8001F0FC0001F0000001F0000
001F0000001F0000001F0000001F0000001F0000001F000000FFE00000FFE000001A207E
951F>I<FE1F00FE3FC01E67E01EC7E01E87E01E87E01F83C01F00001F00001F00001F00
001F00001F00001F00001F00001F00001F00001F00001F00001F0000FFF000FFF0001316
7E9517>114 D<0FF3003FFF00781F00600700E00300E00300F00300FC00007FE0007FF8
003FFE000FFF0001FF00000F80C00780C00380E00380E00380F00700FC0E00EFFC00C7F0
0011167E9516>I<0180000180000180000180000380000380000780000780000F80003F
8000FFFF00FFFF000F80000F80000F80000F80000F80000F80000F80000F80000F80000F
80000F80000F81800F81800F81800F81800F81800F830007C30003FE0000F80011207F9F
16>I<FF01FE00FF01FE001F003E001F003E001F003E001F003E001F003E001F003E001F
003E001F003E001F003E001F003E001F003E001F003E001F003E001F003E001F003E001F
007E001F00FE000F81BE0007FF3FC001FC3FC01A167E951F>I<FFE07FC0FFE07FC00F80
1C0007C0380003E0700003F0600001F8C00000F98000007F8000003F0000001F0000001F
8000003FC0000037C0000063E00000C1F00001C0F8000380FC0007007E000E003E00FF80
FFE0FF80FFE01B167F951E>120 D<FFE01FE0FFE01FE01F8007000F8006000FC00E0007
C00C0007E00C0003E0180003E0180001F0300001F0300000F8600000F86000007CC00000
7CC000007FC000003F8000003F8000001F0000001F0000000E0000000E0000000C000000
0C00000018000078180000FC380000FC300000FC60000069C000007F8000001F0000001B
207F951E>I E /Fc 2 51 df<040E0E1C1C1C38383070706060C0C0070F7F8F0A>48
D<03FC0FFC1C003000600060006000C000C000FFFCFFFCC000C00060006000600030001C
000FFC03FC0E147D9016>50 D E /Fd 11 118 df<07FFFC00E01C01C00C01C00C01C00C
01C00803810803810003830003FF000702000702000702080700100E00100E00100E0020
0E00601C01E0FFFFC016147F9318>69 D<07FC00E001C001C001C001C003800380038003
8007000700070007000E000E000E000E001C00FF800E147F930F>73
D<1FFFF8381C1820381820380840380840381080701000700000700000700000E00000E0
0000E00000E00001C00001C00001C00001C0000380003FF8001514809314>84
D<FF01F83800603800403800803C01001C01001C02001C04001C04001C08001E10000E10
000E20000E40000E40000E80000F000007000006000004000015147E9314>86
D<0780184030206040C040FF80C00080008000C020C04061803E000B0D7E8C10>101
D<06070600000000384C4C8C98181830323264643808147F930C>105
D<30F87C00590C86004E0D06009C0E0600980C0600180C0600180C060030180C0030180C
8030181880301818806030190060300E00190D7F8C1D>109 D<30F8590C4E0C9C0C980C
180C180C30183019303130316032601C100D7F8C15>I<03800C60182030306030603060
30C060C06040C0608023001E000C0D7E8C10>I<0700188019C0318038001E000F000380
4180E180C10082007C000A0D7E8C10>115 D<380C4C0C4C0C8C18981818181818303030
323032307218B40F1C0F0D7F8C14>117 D E /Fe 1 81 df<FFFFFFFFF0FFFFFFFFF070
00000FF878000000F83C000000381C0000001C0E0000000C0F0000000407000000060380
00000203C000000001E000000000E000000000700000000078000000003C000000001C00
0000001E000000000F000000000700000000038000000003800000000300000000070000
000006000000000C000000001800000000380000000030000000006000000000C0000000
01C00000000180000002030000000606000000040E0000000C0C0000001C180000003830
000000F87000000FF87FFFFFFFF0FFFFFFFFF0272A7E7F2C>80 D
E /Ff 3 51 df<0060000060000060000060000060000060000060000060000060000060
00FFFFF0FFFFF00060000060000060000060000060000060000060000060000060000060
0014167E9119>43 D<0C001C00EC000C000C000C000C000C000C000C000C000C000C000C
000C000C000C000C00FFC00A137D9211>49 D<1F0060C06060F070F03060300070007000
6000C001C00180020004000810101020207FE0FFE00C137E9211>I
E /Fg 14 122 df<007E000183800201C00400E00400E00F00E00F00E01F00E01F00E00E
00E00001E00001C0000380000380000700000E00001C0000380000600000C00001800003
00800600800801001001003FFF007FFE00FFFE00131C7E9B15>50
D<007C000187000203800403800F03C00F03C00F03C00E0380000380000700000600000C
0000380003F000001C00000E00000E00000F00000F00000F00700F00F80F00F80F00F00E
00E01E00801C004038003070000F8000121D7D9B15>I<007C000183000201800601800C
00C00C00C00C00C01C01801C01801F03000F86000FCC0007F00003F80003FC000C7E0018
3F00301F00600700600700C00300C00300C00300C00200C006006004006008003830000F
C000121D7D9B15>56 D<0C1E1C1C000000000000000000007070F06007127C910C>58
D<007FF80007C0000780000780000780000780000780000F00000F00000F00000F00000F
00000F00001E00001E00001E00001E00001E00001E00003C00003C00703C00F83C00F83C
00F07800E0700080E00061C0001F0000151D7E9B15>74 D<07FFC000F80000F00000F000
00F00000F00000F00001E00001E00001E00001E00001E00001E00003C00003C00003C000
03C00003C00003C0040780040780040780040780080780080780180F00380F00F0FFFFF0
161C7E9B1A>76 D<07F0001C18001E0C001C0E00180E00000E00000E0001FE000F0E001C
1C00301C00701C00E01C40E01C40E03C40E05C80709D803F0E0012127D9115>97
D<00FE000307000E07801C0700380600380000700000700000700000E00000E00000E000
006000007002007004003008001C300007C00011127E9112>99 D<01F8070C0C06180738
03300370037FFF7000E000E000E00060006002700430081C3007C010127E9112>101
D<1F8F8007B0C003C0E00780E00780E00700E00700E00700E00700E00E01C00E01C00E01
C00E01C00E01C00E01C01C03801E03C0FF9FF014127F9117>110
D<1F9C07EE03CF078E078C07000700070007000E000E000E000E000E000E001C001E00FF
C010127F9110>114 D<020002000200060006000C001C003C00FFE01C001C0038003800
3800380038003800700070407040704070407080708031001E000B1A7C9910>116
D<FC1F803C07801C0380380700380700380700380700380700380700700E00700E00700E
00700E00701E00701E00703C00305E001F9F8011127C9117>I<0FF07E03C03803C03001
C02001C02001C04001C08000E08000E10000E10000E20000F200007400007C0000780000
7000003000002000002000004000004000708000F10000F30000E60000780000171A8091
16>121 D E /Fh 16 111 df<FFFFFF80FFFFFF8019027D8A20>0
D<03C00FF01FF83FFC7FFE7FFEFFFFFFFFFFFFFFFF7FFE7FFE3FFC1FF80FF003C010107E
9115>15 D<000001800000078000001E00000078000001E00000078000001E0000007800
0001E00000078000001E00000078000000E0000000780000001E0000000780000001E000
0000780000001E0000000780000001E0000000780000001E000000078000000180000000
000000000000000000000000000000000000000000000000007FFFFF00FFFFFF8019227D
9920>20 D<C0000000F00000003C0000000F00000003C0000000F00000003C0000000F00
000003C0000000F00000003C0000000F000000038000000F0000003C000000F0000003C0
00000F0000003C000000F0000003C000000F0000003C00000070000000C0000000000000
000000000000000000000000000000000000000000000000007FFFFF00FFFFFF8019227D
9920>I<007FFF8003FFFF80078000000C00000018000000300000003000000060000000
60000000C0000000C0000000C0000000C0000000C0000000C0000000C0000000C0000000
60000000600000003000000030000000180000000E0000000780000001FFFF80007FFF80
191A7D9620>26 D<00000030000000001800000000180000000018000000000C00000000
0C0000000006000000000300000000038000000000C0FFFFFFFFF8FFFFFFFFF800000000
C00000000380000000030000000006000000000C000000000C0000000018000000001800
0000001800000000300025167E942A>33 D<00060000000006000000000C000000001C00
000000180000000030000000007FFFFFF000FFFFFFF8038000000007000000003C000000
00F0000000003C000000000E000000000300000000018000000000FFFFFFF8007FFFFFF0
00300000000018000000000C000000000C0000000006000000000600000025187E952A>
40 D<000003000000000300000000018000000001C000000000C00000000060007FFFFF
F000FFFFFFF8000000000E00000000070000000001E0000000007800000001E000000003
8000000006000000000C00FFFFFFF8007FFFFFF0000000006000000000C0000000018000
00000180000000030000000003000025187E952A>I<007FF801FFF80780000E00001800
00300000300000600000600000C00000C00000C00000FFFFF8FFFFF8C00000C00000C000
006000006000003000003000001800000E000007800001FFF8007FF8151A7D961C>50
D<400004C0000C6000186000186000183000303000303000301800601800601FFFE00FFF
C00C00C00C00C006018006018003030003030003030001860001860001860000CC0000CC
0000CC00007800007800007800003000003000161E809C17>56 D<0004000C03CC0C3818
18301C303C703E603660666066E067E067E0C7E0C7E0C7E187E187E187E307E307E307E6
07E607E60766066C067C0E3C0C380C18181C3033C03000300010237E9F15>59
D<400002C00006C00006C00006C00006C00006C00006C00006C00006C00006C00006C000
06C00006C00006C00006C00006C00006C00006C0000660000C60000C3000181C00700F01
E003FF8000FE00171A7E981C>91 D<003C00E001C0018003800380038003800380038003
80038003800380038003800380030007001C00F0001C0007000300038003800380038003
8003800380038003800380038003800380018001C000E0003C0E297D9E15>102
D<F0001C0007000300038003800380038003800380038003800380038003800380038001
8001C000E0003C00E001C001800380038003800380038003800380038003800380038003
800380030007001C00F0000E297D9E15>I<C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0
C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C002297B9E0C>106
D<C000C0006000600060003000300030001800180018000C000C000C0006000600030003
00030001800180018000C000C000C000600060003000300030001800180018000C000C00
0C0006000600060003000110297E9E15>110 D E /Fi 69 123 df<007E1F0001C1B180
0303E3C00703C3C00E03C1800E01C0000E01C0000E01C0000E01C0000E01C0000E01C000
FFFFFC000E01C0000E01C0000E01C0000E01C0000E01C0000E01C0000E01C0000E01C000
0E01C0000E01C0000E01C0000E01C0000E01C0000E01C0000E01C0000E01C0007F87FC00
1A1D809C18>11 D<007E0001C1800301800703C00E03C00E01800E00000E00000E00000E
00000E0000FFFFC00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E
01C00E01C00E01C00E01C00E01C00E01C00E01C07F87F8151D809C17>I<6060F0F0F8F8
6868080808080808101010102020404080800D0C7F9C15>34 D<60F0F868080808101020
4080050C7C9C0C>39 D<00800100020006000C000C001800180030003000300060006000
60006000E000E000E000E000E000E000E000E000E000E000E000E0006000600060006000
300030003000180018000C000C000600020001000080092A7C9E10>I<80004000200030
00180018000C000C00060006000600030003000300030003800380038003800380038003
800380038003800380038003000300030003000600060006000C000C0018001800300020
0040008000092A7E9E10>I<000600000006000000060000000600000006000000060000
00060000000600000006000000060000000600000006000000060000FFFFFFE0FFFFFFE0
000600000006000000060000000600000006000000060000000600000006000000060000
000600000006000000060000000600001B1C7E9720>43 D<60F0F0701010101020204080
040C7C830C>I<FFE0FFE00B0280890E>I<60F0F06004047C830C>I<03C00C301818300C
300C700E60066006E007E007E007E007E007E007E007E007E007E007E007E007E0076006
6006700E300C300C18180C3007E0101D7E9B15>48 D<010007003F00C700070007000700
070007000700070007000700070007000700070007000700070007000700070007000700
07000700FFF80D1C7C9B15>I<07C01830201C400C400EF00FF80FF807F8077007000F00
0E000E001C001C00380070006000C00180030006010C01180110023FFE7FFEFFFE101C7E
9B15>I<07E01830201C201C781E780E781E381E001C001C00180030006007C00030001C
001C000E000F000F700FF80FF80FF80FF00E401C201C183007C0101D7E9B15>I<000C00
000C00001C00003C00003C00005C0000DC00009C00011C00031C00021C00041C000C1C00
081C00101C00301C00201C00401C00C01C00FFFFC0001C00001C00001C00001C00001C00
001C00001C0001FFC0121C7F9B15>I<300C3FF83FF03FC0200020002000200020002000
23E02C303018301C200E000E000F000F000F600FF00FF00FF00F800E401E401C20381870
07C0101D7E9B15>I<03E00C301008200C200660066006700670067C0C3E183FB01FE007
F007F818FC307E601E600FC007C003C003C003C00360026004300C1C1007E0101D7E9B15
>56 D<03C00C301818300C700C600EE006E006E007E007E007E007E0076007700F300F18
170C2707C700060006000E300C780C78187018203010C00F80101D7E9B15>I<60F0F060
0000000000000000000060F0F06004127C910C>I<7FFFFFC0FFFFFFE000000000000000
00000000000000000000000000000000000000000000000000FFFFFFE07FFFFFC01B0C7E
8F20>61 D<000600000006000000060000000F0000000F0000000F000000178000001780
000037C0000023C0000023C0000043E0000041E0000041E0000080F0000080F0000080F0
00010078000100780001FFF80002003C0002003C0002003C0004001E0004001E000C001F
000C000F001E001F00FF00FFF01C1D7F9C1F>65 D<FFFFC0000F0078000F003C000F001E
000F000E000F000F000F000F000F000F000F000F000F000E000F001E000F003C000F00F8
000FFFF0000F003C000F001E000F000F000F0007000F0007800F0007800F0007800F0007
800F0007800F000F000F000F000F001E000F007800FFFFE000191C7F9B1D>I<001F8080
00E0618001801980070007800E0003801C0003801C000180380001807800008078000080
70000080F0000000F0000000F0000000F0000000F0000000F0000000F0000000F0000000
700000807800008078000080380000801C0001001C0001000E0002000700040001800800
00E03000001FC000191E7E9C1E>I<FFFFC0000F00F0000F003C000F000E000F0007000F
0007000F0003800F0003C00F0001C00F0001C00F0001E00F0001E00F0001E00F0001E00F
0001E00F0001E00F0001E00F0001E00F0001C00F0001C00F0003C00F0003800F0007800F
0007000F000E000F001C000F007000FFFFC0001B1C7E9B20>I<FFFFFC0F003C0F000C0F
00040F00040F00060F00020F00020F01020F01000F01000F01000F03000FFF000F03000F
01000F01000F01000F01010F00010F00020F00020F00020F00060F00060F000C0F003CFF
FFFC181C7E9B1C>I<FFFFF80F00780F00180F00080F00080F000C0F00040F00040F0104
0F01000F01000F01000F03000FFF000F03000F01000F01000F01000F01000F00000F0000
0F00000F00000F00000F00000F00000F0000FFF800161C7E9B1B>I<001F808000E06180
01801980070007800E0003801C0003801C00018038000180780000807800008070000080
F0000000F0000000F0000000F0000000F0000000F0000000F000FFF0F0000F8070000780
7800078078000780380007801C0007801C0007800E00078007000B800180118000E06080
001F80001C1E7E9C21>I<FFF0FFF00F000F000F000F000F000F000F000F000F000F000F
000F000F000F000F000F000F000F000F000F000F000F000F000F000FFFFF000F000F000F
000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F
000F000F000F000F000F00FFF0FFF01C1C7F9B1F>I<FFF00F000F000F000F000F000F00
0F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F00
0F000F00FFF00C1C7F9B0F>I<FFF01FE00F0007800F0006000F0004000F0008000F0010
000F0020000F0040000F0080000F0100000F0200000F0600000F0F00000F1780000F2780
000F43C0000F81E0000F01E0000F00F0000F0078000F0078000F003C000F003E000F001E
000F000F000F000F800F000FC0FFF03FF01C1C7F9B20>75 D<FFF8000F80000F00000F00
000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00
000F00000F00000F00080F00080F00080F00180F00180F00100F00300F00700F01F0FFFF
F0151C7E9B1A>I<FF8000FF800F8000F8000F8000F8000BC00178000BC00178000BC001
780009E002780009E002780008F004780008F004780008F0047800087808780008780878
000878087800083C107800083C107800083C107800081E207800081E207800081E207800
080F407800080F40780008078078000807807800080780780008030078001C03007800FF
8307FF80211C7E9B26>I<FF001FF00F8003800FC001000BC0010009E0010008F0010008
F0010008780100083C0100083E0100081E0100080F0100080F8100080781000803C10008
01E1000801F1000800F1000800790008007D0008003D0008001F0008001F0008000F0008
000700080003001C000300FF8001001C1C7F9B1F>I<003F800000E0E000038038000700
1C000E000E001C0007003C00078038000380780003C0780003C0700001C0F00001E0F000
01E0F00001E0F00001E0F00001E0F00001E0F00001E0F00001E0700001C0780003C07800
03C0380003803C0007801C0007000E000E0007001C000380380000E0E000003F80001B1E
7E9C20>I<FFFF800F00E00F00780F003C0F001C0F001E0F001E0F001E0F001E0F001E0F
001C0F003C0F00780F00E00FFF800F00000F00000F00000F00000F00000F00000F00000F
00000F00000F00000F00000F0000FFF000171C7E9B1C>I<FFFF00000F01E0000F007800
0F003C000F001C000F001E000F001E000F001E000F001E000F001C000F003C000F007800
0F01E0000FFF00000F01E0000F0070000F0078000F003C000F003C000F003C000F003C00
0F003C000F003C000F003C100F003C100F001C100F001C10FFF00E20000003C01C1D7E9B
1F>82 D<07E0801C1980300580300380600180E00180E00080E00080E00080F00000F800
007C00007FC0003FF8001FFE0007FF0000FF80000F800007C00003C00001C08001C08001
C08001C0C00180C00180E00300D00200CC0C0083F800121E7E9C17>I<7FFFFFC0700F01
C0600F00C0400F0040400F0040C00F0020800F0020800F0020800F0020000F0000000F00
00000F0000000F0000000F0000000F0000000F0000000F0000000F0000000F0000000F00
00000F0000000F0000000F0000000F0000000F0000000F0000001F800003FFFC001B1C7F
9B1E>I<FFF01FF00F0003800F0001000F0001000F0001000F0001000F0001000F000100
0F0001000F0001000F0001000F0001000F0001000F0001000F0001000F0001000F000100
0F0001000F0001000F0001000F0001000F00010007000200078002000380040001C00400
00E0180000706000000F80001C1D7F9B1F>I<FFE1FFC0FF1F003E003C1E003C00180F00
1E00100F001E00100F001E001007801F002007801F002007801F002003C027804003C027
804003C027804001E043C08001E043C08001E043C08000F081E10000F081E10000F081E1
0000F900F300007900F200007900F200007E007E00003E007C00003E007C00003C003C00
001C003800001C00380000180018000008001000281D7F9B2B>87
D<FEFEC0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0
C0C0C0C0FEFE07297C9E0C>91 D<08081010202040404040808080808080B0B0F8F87878
30300D0C7A9C15>I<FEFE06060606060606060606060606060606060606060606060606
060606060606060606060606FEFE0729809E0C>I<1FC000307000783800781C00301C00
001C00001C0001FC000F1C00381C00701C00601C00E01C40E01C40E01C40603C40304E80
1F870012127E9115>97 D<FC00001C00001C00001C00001C00001C00001C00001C00001C
00001C00001C00001C7C001D87001E01801C00C01C00E01C00601C00701C00701C00701C
00701C00701C00701C00601C00E01C00C01E018019070010FC00141D7F9C17>I<03F80C
0C181E301E700C6000E000E000E000E000E000E00060007002300218040C1803E00F127F
9112>I<001F800003800003800003800003800003800003800003800003800003800003
8003F3800E0B80180780300380700380600380E00380E00380E00380E00380E00380E003
806003807003803003801807800E1B8003E3F0141D7F9C17>I<07E00C301818300C700E
6006E006FFFEE000E000E000E00060007002300218040C1803E00F127F9112>I<00F801
8C071E061E0E0C0E000E000E000E000E000E00FFE00E000E000E000E000E000E000E000E
000E000E000E000E000E000E000E000E007FE00F1D809C0D>I<00038007C4C01C78C038
3880301800701C00701C00701C00701C003018003838001C700027C00020000020000030
00003FF8001FFF001FFF802003806001C0C000C0C000C0C000C06001803003001C0E0007
F800121C7F9215>I<FC00001C00001C00001C00001C00001C00001C00001C00001C0000
1C00001C00001C7C001C87001D03001E03801C03801C03801C03801C03801C03801C0380
1C03801C03801C03801C03801C03801C03801C0380FF9FF0141D7F9C17>I<18003C003C
0018000000000000000000000000000000FC001C001C001C001C001C001C001C001C001C
001C001C001C001C001C001C001C00FF80091D7F9C0C>I<00C001E001E000C000000000
0000000000000000000007E000E000E000E000E000E000E000E000E000E000E000E000E0
00E000E000E000E000E000E000E000E060E0F0C0F1C061803E000B25839C0D>I<FC0000
1C00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C0FE01C0780
1C06001C0C001C10001C20001C40001CE0001DE0001E70001C78001C38001C3C001C1C00
1C0E001C0F001C0F80FF9FE0131D7F9C16>I<FC001C001C001C001C001C001C001C001C
001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C
001C00FF80091D7F9C0C>I<FC7E07E0001C838838001D019018001E01E01C001C01C01C
001C01C01C001C01C01C001C01C01C001C01C01C001C01C01C001C01C01C001C01C01C00
1C01C01C001C01C01C001C01C01C001C01C01C001C01C01C00FF8FF8FF8021127F9124>
I<FC7C001C87001D03001E03801C03801C03801C03801C03801C03801C03801C03801C03
801C03801C03801C03801C03801C0380FF9FF014127F9117>I<03F0000E1C0018060030
0300700380600180E001C0E001C0E001C0E001C0E001C0E001C060018070038030030018
06000E1C0003F00012127F9115>I<FC7C001D87001E01801C01C01C00E01C00E01C0070
1C00701C00701C00701C00701C00701C00E01C00E01C01C01E01801D07001CFC001C0000
1C00001C00001C00001C00001C00001C0000FF8000141A7F9117>I<03E0800E19801805
80380780700380700380E00380E00380E00380E00380E00380E003807003807003803807
801807800E1B8003E380000380000380000380000380000380000380000380001FF0141A
7F9116>I<FCE01D381E781E781C301C001C001C001C001C001C001C001C001C001C001C
001C00FFC00D127F9110>I<1F9020704030C010C010E010F8007F803FE00FF000F88038
8018C018C018E010D0608FC00D127F9110>I<04000400040004000C000C001C003C00FF
E01C001C001C001C001C001C001C001C001C001C101C101C101C101C100C100E2003C00C
1A7F9910>I<FC1F801C03801C03801C03801C03801C03801C03801C03801C03801C0380
1C03801C03801C03801C03801C07800C07800E1B8003E3F014127F9117>I<FF07E03C03
801C01001C01000E02000E02000F060007040007040003880003880003C80001D00001D0
0000E00000E00000E00000400013127F9116>I<FF3FC7E03C0703C01C0701801C070100
1C0B01000E0B82000E0B82000E1182000711C4000711C4000720C40003A0E80003A0E800
03C0680001C0700001C0700001803000008020001B127F911E>I<FF0FE01E07001C0600
0E040007080003900003B00001E00000E00000F00001F000013800021C00041C000C0E00
1807003C0780FE1FF014127F9116>I<FF07E03C03801C01001C01000E02000E02000F06
0007040007040003880003880003C80001D00001D00000E00000E00000E0000040000040
00008000008000F08000F10000F30000660000380000131A7F9116>I<7FFC7038603840
7040F040E041C003C0038007000F040E041C043C0C380870087038FFF80E127F9112>I
E /Fj 33 123 df<00010000020000020000020000020000040000040000040000040000
0800000800007E0001C9800710E00C1060181070381030702030702030E02070E02070E0
4070E040E0E040E06041C06083803086001C9C0007E00001000001000001000001000002
000002000002000002000014257E9C19>30 D<1E000227800423800803C01001C02001E0
4000E08000E10000F100007200007400007800003800003800007800007C00009C00011C
00021C00041E00080E00100F001007002007084003908001E0171A7F911A>I<60F0F060
04047C830C>58 D<60F0F0701010101020204080040C7C830C>I<0000038000000F0000
003C000000F0000003C000000F0000003C000000F0000003C000000F0000003C000000F0
000000F00000003C0000000F00000003C0000000F00000003C0000000F00000003C00000
00F00000003C0000000F000000038019187D9520>I<00010003000600060006000C000C
000C0018001800180030003000300060006000C000C000C0018001800180030003000300
060006000C000C000C00180018001800300030003000600060006000C000C00010297E9E
15>I<E0000000780000001E0000000780000001E0000000780000001E00000007800000
01E0000000780000001E00000007800000078000001E00000078000001E0000007800000
1E00000078000001E00000078000001E00000078000000E000000019187D9520>I<0001
F808000E061800380138006000F001C0007003800070070000300F0000200E0000201C00
00203C0000203C000000780000007800000078000000F0000000F0000000F0000000F000
0000F0000100F0000100F0000100700002007000020030000400380008001C0010000E00
60000701800000FE00001D1E7E9C1E>67 D<01FFFFF8003C007800380018003800100038
0010003800100070001000700010007008100070080000E0100000E0100000E0300000FF
F00001C0200001C0200001C0200001C02000038040400380004003800080038000800700
01000700010007000300070006000E003E00FFFFFC001D1C7E9B1F>69
D<0001F808000E061800380138006000F001C0007003800070070000300F0000200E0000
201C0000203C0000203C000000780000007800000078000000F0000000F0000000F0007F
F0F0000780F0000700F0000700F00007007000070070000E0030000E0038000E001C001E
000E0064000701840000FE00001D1E7E9C21>71 D<01FFC0003C00003800003800003800
00380000700000700000700000700000E00000E00000E00000E00001C00001C00001C000
01C0000380000380000380000380000700000700000700000700000F0000FFE000121C7E
9B12>73 D<001FFC0001E00001C00001C00001C00001C000038000038000038000038000
0700000700000700000700000E00000E00000E00000E00001C00001C00001C00201C0070
3800F03800E0300080700040E0006180001F0000161D7D9B17>I<0003F800000E0E0000
38038000E001C001C001C0038000E0070000E00F0000F01E0000F01C0000F03C0000F03C
0000F0780000F0780000F0780000F0F00001E0F00001E0F00001E0F00003C0F00003C0F0
000780F0000780F0000F0070000E0070001C00380038003C0070001C01C0000707800001
FC00001C1E7E9C20>79 D<01FFFE00003C03C0003800E0003800F0003800700038007000
7000F0007000F0007000F0007001E000E001C000E0078000E01E0000FFF00001C0380001
C00C0001C00E0001C00E0003800E0003800E0003800E0003800E0007001E0007001E0807
001E0807001E100F000F10FFE00F20000003C01D1D7E9B20>82 D<000FC100303300400F
00800601800603000603000606000406000407000007000007800003F00001FF0000FFC0
003FE00003E00000F00000700000300000302000302000306000606000606000C0600080
F00300CC060083F800181E7E9C19>I<1FFFFFF01C038070300700302007002060070020
40070020400E0020800E0020800E0020000E0000001C0000001C0000001C0000001C0000
003800000038000000380000003800000070000000700000007000000070000000E00000
00E0000000E0000000E0000001E000007FFF00001C1C7F9B18>I<FFC00FF01C0003801C
0003001C0002001C0002001C0004001C0008001E0008000E0010000E0030000E0020000E
0040000E0040000E0080000E0100000F0100000702000007040000070400000708000007
080000071000000720000003A0000003C00000038000000380000003000000030000001C
1D7D9B18>86 D<01FFC0FF80001E003C00001C003000000E002000000E004000000F0080
000007010000000782000000038400000003CC00000001D800000001F000000001E00000
0000E000000000F00000000170000000027800000004380000000838000000103C000000
201C000000401E000000800E000001000F0000020007000006000700001E000F8000FF80
3FF000211C7F9B22>88 D<01F0030C0C0C1C1E383C301870007000E000E000E000E000E0
00E0046008601030601F800F127E9112>99 D<0007E00000E00000E00001C00001C00001
C00001C000038000038000038000038001E7000717000C0F00180F00380E00300E00700E
00700E00E01C00E01C00E01C00E01C00E03880E03880E038806078803199001E0E00131D
7E9C16>I<01F007080C0818043808300870307FC0E000E000E000E000E000E004600860
1030600F800E127E9113>I<0001E0000630000E78000EF0001C60001C00001C00001C00
001C0000380000380003FFC000380000380000700000700000700000700000700000E000
00E00000E00000E00000E00001C00001C00001C00001C00001C000018000038000038000
630000F30000F60000E4000078000015257E9C14>I<01C003C003C00180000000000000
0000000000001C00270047004700870087000E000E001C001C001C003800388038807080
710032001C000A1C7E9B0E>105 D<0FC00001C00001C000038000038000038000038000
0700000700000700000700000E07000E08800E11C00E23C01C47801C83001D00001E0000
3FC00038E000387000387000707100707100707100707200E03200601C00121D7E9C16>
107 D<381F81F04E20C6184640E81C4680F01C8F00F01C8E00E01C0E00E01C0E00E01C1C
01C0381C01C0381C01C0381C01C0703803807138038071380380E1380380E27007006430
03003820127E9124>109 D<3C1F004E61804681C04701C08F01C08E01C00E01C00E01C0
1C03801C03801C03801C0700380710380710380E10380E2070064030038014127E9119>
I<00F800030C000E06001C0300180300300300700380700380E00700E00700E00700E00E
00E00E00E01C0060180060300030E0000F800011127E9114>I<01F0060C0C040C0E180C
1C001F000FE00FF003F80038201C7018F018F010803060601F800F127E9113>115
D<00C001C001C001C00380038003800380FFF00700070007000E000E000E000E001C001C
001C001C00382038203840384018800F000C1A80990F>I<1C00C02701C04701C04701C0
8703808703800E03800E03801C07001C07001C07001C0700180E20180E20180E201C1E20
0C264007C38013127E9118>I<1C03270747074703870187010E010E011C021C021C021C
041804180818081C100C2007C010127E9114>I<1C00C0802701C1C04701C1C04701C0C0
87038040870380400E0380400E0380401C0700801C0700801C0700801C07010018060100
180601001C0E02001C0F04000E13080003E1F0001A127E911E>I<038107C10FF6081C10
080010002000400080010002000400080410043C1867F843F081E010127E9113>122
D E /Fk 26 122 df<1C003E007F00FF80FF80FF807F003E001C0009097B8813>46
D<000E00001E00007E0007FE00FFFE00FFFE00F8FE0000FE0000FE0000FE0000FE0000FE
0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE
0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE
007FFFFE7FFFFE7FFFFE17277BA622>49 D<00FF800003FFF0000FFFFC001F03FE003800
FF007C007F80FE003FC0FF003FC0FF003FE0FF001FE0FF001FE07E001FE03C003FE00000
3FE000003FC000003FC000007F8000007F000000FE000000FC000001F8000003F0000003
E00000078000000F0000001E0000003C00E0007000E000E000E001C001C0038001C00700
01C00FFFFFC01FFFFFC03FFFFFC07FFFFFC0FFFFFF80FFFFFF80FFFFFF801B277DA622>
I<007F800003FFF00007FFF8000F81FE001F00FE003F80FF003F807F803F807F803F807F
801F807F800F007F800000FF000000FF000000FE000001FC000001F8000007F00000FFC0
0000FFF0000001FC000000FE0000007F0000007F8000003FC000003FC000003FE000003F
E03C003FE07E003FE0FF003FE0FF003FE0FF003FC0FF007FC07E007F807C007F003F01FE
001FFFFC0007FFF00000FF80001B277DA622>I<FFFFFFFFE0FFFFFFFFE0FFFFFFFFE003
FC001FE003FC0007F003FC0001F003FC0001F003FC0000F003FC00007003FC00007003FC
00007003FC00007803FC00E03803FC00E03803FC00E03803FC00E00003FC01E00003FC01
E00003FC07E00003FFFFE00003FFFFE00003FFFFE00003FC07E00003FC01E00003FC01E0
0003FC00E00003FC00E00003FC00E00003FC00E00003FC00000003FC00000003FC000000
03FC00000003FC00000003FC00000003FC00000003FC00000003FC000000FFFFFC0000FF
FFFC0000FFFFFC000025297EA82B>70 D<FFFE0000001FFFC0FFFE0000001FFFC0FFFF00
00003FFFC003FF0000003FF00003FF0000003FF00003BF80000077F00003BF80000077F0
00039FC00000E7F000039FC00000E7F000038FE00001C7F000038FE00001C7F0000387F0
000387F0000387F0000387F0000387F0000387F0000383F8000707F0000383F8000707F0
000381FC000E07F0000381FC000E07F0000380FE001C07F0000380FE001C07F0000380FF
003807F00003807F003807F00003807F003807F00003803F807007F00003803F807007F0
0003801FC0E007F00003801FC0E007F00003800FE1C007F00003800FE1C007F00003800F
E1C007F000038007F38007F000038007F38007F000038003FF0007F000038003FF0007F0
00038001FE0007F000038001FE0007F000038000FC0007F000038000FC0007F000FFFE00
FC01FFFFC0FFFE007801FFFFC0FFFE007801FFFFC03A297DA841>77
D<FFFFFFE00000FFFFFFFE0000FFFFFFFF800003FC007FE00003FC000FF00003FC0007F8
0003FC0007FC0003FC0003FC0003FC0003FE0003FC0003FE0003FC0003FE0003FC0003FE
0003FC0003FE0003FC0003FE0003FC0003FC0003FC0007F80003FC0007F80003FC001FE0
0003FC007FC00003FFFFFE000003FFFFF8000003FC00FC000003FC007F000003FC003F80
0003FC003F800003FC001FC00003FC001FE00003FC001FE00003FC001FE00003FC001FE0
0003FC001FE00003FC001FF00003FC001FF00003FC001FF00003FC001FF00703FC001FF8
0703FC000FF80703FC0007F80EFFFFF003FE1CFFFFF001FFF8FFFFF0003FF030297DA834
>82 D<007F806003FFF0E007FFF9E00F807FE01F001FE03E0007E07C0003E07C0001E0FC
0001E0FC0001E0FC0000E0FE0000E0FE0000E0FF000000FFC000007FFE00007FFFE0003F
FFFC001FFFFE000FFFFF8007FFFFC003FFFFC0007FFFE00007FFF000007FF000000FF800
0007F8000003F8600001F8E00001F8E00001F8E00001F8F00001F0F00001F0F80003F0FC
0003E0FF0007C0FFE01F80F3FFFF00E1FFFE00C01FF0001D297CA826>I<7FFFFFFFFFC0
7FFFFFFFFFC07FFFFFFFFFC07F803FC03FC07E003FC007C078003FC003C078003FC003C0
70003FC001C0F0003FC001E0F0003FC001E0E0003FC000E0E0003FC000E0E0003FC000E0
E0003FC000E0E0003FC000E000003FC0000000003FC0000000003FC0000000003FC00000
00003FC0000000003FC0000000003FC0000000003FC0000000003FC0000000003FC00000
00003FC0000000003FC0000000003FC0000000003FC0000000003FC0000000003FC00000
00003FC0000000003FC0000000003FC0000000003FC0000000003FC0000000003FC00000
007FFFFFE000007FFFFFE000007FFFFFE0002B287EA730>I<03FF80000FFFF0001F01F8
003F807E003F807E003F803F001F003F800E003F8000003F8000003F8000003F80000FFF
8000FFFF8007FC3F800FE03F803F803F803F003F807F003F80FE003F80FE003F80FE003F
80FE003F807E007F807F00DF803F839FFC0FFF0FFC01FC03FC1E1B7E9A21>97
D<FFE0000000FFE0000000FFE00000000FE00000000FE00000000FE00000000FE0000000
0FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000F
E00000000FE1FE00000FE7FF80000FFE07E0000FF801F0000FF000F8000FE000FC000FE0
00FE000FE0007F000FE0007F000FE0007F000FE0007F800FE0007F800FE0007F800FE000
7F800FE0007F800FE0007F800FE0007F800FE0007F000FE0007F000FE0007F000FE000FE
000FE000FC000FF001F8000FF803F0000F9E0FE0000F0FFF80000E01FC0000212A7EA926
>I<003FF80000FFFE0003F01F0007E03F800FC03F801F803F803F801F007F000E007F00
00007F000000FF000000FF000000FF000000FF000000FF000000FF000000FF0000007F00
00007F0000007F8000003F8001C01F8001C00FC0038007E0070003F01E0000FFFC00003F
E0001A1B7E9A1F>I<00003FF80000003FF80000003FF800000003F800000003F8000000
03F800000003F800000003F800000003F800000003F800000003F800000003F800000003
F800000003F800000003F800001FE3F80000FFFBF80003F83FF80007E00FF8000FC007F8
001F8003F8003F8003F8007F0003F8007F0003F8007F0003F800FF0003F800FF0003F800
FF0003F800FF0003F800FF0003F800FF0003F800FF0003F8007F0003F8007F0003F8007F
0003F8003F8003F8001F8003F8000F8007F80007C00FF80003F03FFF8000FFF3FF80003F
C3FF80212A7EA926>I<003FE00001FFF80003F07E0007C01F000F801F801F800F803F80
0FC07F000FC07F0007C07F0007E0FF0007E0FF0007E0FFFFFFE0FFFFFFE0FF000000FF00
0000FF0000007F0000007F0000007F0000003F8000E01F8000E00FC001C007E0038003F8
1F0000FFFE00001FF0001B1B7E9A20>I<0007F0003FFC00FE3E01F87F03F87F03F07F07
F07F07F03E07F00007F00007F00007F00007F00007F00007F000FFFFC0FFFFC0FFFFC007
F00007F00007F00007F00007F00007F00007F00007F00007F00007F00007F00007F00007
F00007F00007F00007F00007F00007F00007F00007F00007F0007FFF807FFF807FFF8018
2A7EA915>I<00FF81F003FFE7F80FC1FE7C1F80FC7C1F007C383F007E107F007F007F00
7F007F007F007F007F007F007F007F007F003F007E001F007C001F80FC000FC1F8001FFF
E00018FF800038000000380000003C0000003E0000003FFFF8001FFFFF001FFFFF800FFF
FFC007FFFFE01FFFFFF03C0007F07C0001F8F80000F8F80000F8F80000F8F80000F87C00
01F03C0001E01F0007C00FC01F8003FFFE00007FF0001E287E9A22>I<07000F801FC03F
E03FE03FE01FC00F8007000000000000000000000000000000FFE0FFE0FFE00FE00FE00F
E00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00F
E0FFFEFFFEFFFE0F2B7DAA14>105 D<FFC07F800FF000FFC1FFE03FFC00FFC383F0707E
000FC603F8C07F000FCC01F9803F000FD801FF003F800FF001FE003F800FF001FE003F80
0FE001FC003F800FE001FC003F800FE001FC003F800FE001FC003F800FE001FC003F800F
E001FC003F800FE001FC003F800FE001FC003F800FE001FC003F800FE001FC003F800FE0
01FC003F800FE001FC003F800FE001FC003F800FE001FC003F800FE001FC003F800FE001
FC003F80FFFE1FFFC3FFF8FFFE1FFFC3FFF8FFFE1FFFC3FFF8351B7D9A3A>109
D<FFC07F0000FFC1FFC000FFC787E0000FCE03F0000FD803F0000FD803F8000FF003F800
0FF003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000F
E003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE0
03F8000FE003F8000FE003F800FFFE3FFF80FFFE3FFF80FFFE3FFF80211B7D9A26>I<00
3FE00001FFFC0003F07E000FC01F801F800FC03F800FE03F0007E07F0007F07F0007F07F
0007F0FF0007F8FF0007F8FF0007F8FF0007F8FF0007F8FF0007F8FF0007F8FF0007F87F
0007F07F0007F03F800FE03F800FE01F800FC00FC01F8007F07F0001FFFC00003FE0001D
1B7E9A22>I<FFE1FE0000FFE7FF8000FFFE07E0000FF803F0000FF001F8000FE000FC00
0FE000FE000FE000FF000FE0007F000FE0007F000FE0007F800FE0007F800FE0007F800F
E0007F800FE0007F800FE0007F800FE0007F800FE0007F000FE000FF000FE000FF000FE0
00FE000FE001FC000FF001F8000FF803F0000FFE0FE0000FEFFF80000FE1FC00000FE000
00000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000
000FE0000000FFFE000000FFFE000000FFFE00000021277E9A26>I<FFC1F0FFC7FCFFCE
3E0FD87F0FD87F0FF07F0FF03E0FF01C0FE0000FE0000FE0000FE0000FE0000FE0000FE0
000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE000FFFF00FFFF00FFFF
00181B7E9A1C>114 D<03FE300FFFF01E03F03800F0700070F00070F00070F80070FE00
00FFE0007FFE007FFF803FFFE01FFFF007FFF800FFF80007FC6000FCE0007CE0003CF000
3CF00038F80038FC0070FF01E0F7FFC0C1FF00161B7E9A1B>I<00700000700000700000
700000F00000F00000F00001F00003F00003F00007F0001FFFF0FFFFF0FFFFF007F00007
F00007F00007F00007F00007F00007F00007F00007F00007F00007F00007F00007F00007
F03807F03807F03807F03807F03807F03803F03803F87001F86000FFC0001F8015267FA5
1B>I<FFE03FF800FFE03FF800FFE03FF8000FE003F8000FE003F8000FE003F8000FE003
F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8
000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F800
0FE007F80007E007F80007E00FF80003F03BFF8001FFF3FF80003FC3FF80211B7D9A26>
I<FFFE03FF80FFFE03FF80FFFE03FF800FF000780007F000700007F800F00003F800E000
03FC01E00001FC01C00001FC01C00000FE03800000FE03800000FF078000007F07000000
7F8F0000003F8E0000003FCE0000001FDC0000001FDC0000000FF80000000FF80000000F
F800000007F000000007F000000003E000000003E000000001C000000001C00000000380
0000000380000038078000007C07000000FE0F000000FE0E000000FE1C000000FE3C0000
007C780000003FE00000000F8000000021277F9A24>121 D E /Fl
48 123 df<0000FE000003018000060180000C0380001C0180001C000000180000003800
0000380000003800000038000003FFFE0000700E0000700E0000700E0000701C0000701C
0000E01C0000E01C0000E0380000E0380000E0380001C0380001C0720001C0720001C072
0001C07200038034000380180003800000030000000300000007000000C6000000E60000
00CC000000780000001925819C17>12 D<18303C783C7838700810081010201020204020
40408081000D0C799C15>34 D<183C3C3C0404080810204080060C779C0D>39
D<00030006000800180030006000C000C0018003000300060006000C000C001C00180018
00380030003000700070006000600060006000E000E000E000E000E00060006000600060
00600020003000100008000800102A7B9E11>I<001000100008000C0004000600060006
00060006000700070007000700070006000600060006000E000E000C000C001C00180018
0038003000300060006000C000C001800300030006000C00180010006000C000102A809E
11>I<183878380808101020404080050C7D830D>44 D<FFC0FFC0FFC00A037D890F>I<30
78F06005047C830D>I<060F0F06000000000000000000003078F06008127C910D>58
D<0000180000001800000038000000380000007800000078000000B80000013800000138
0000023C0000021C0000041C00000C1C0000081C0000101C0000101C0000201C0000201C
00007FFC0000C01C0000801C0001001C0001001E0002000E0002000E0004000E000C000E
001C001E00FF00FFC01A1D7E9C1F>65 D<0003F020001E0C60003002E000E003C001C001
C0038001C0070000C00E0000801E0000801C0000803C0000803C00000078000000780000
0078000000F0000000F0000000F0000000F0000000F0000400F0000400F0000400F00008
00700008007000100038002000180040000C0180000706000001F800001B1E7A9C1E>67
D<01FFFFF0003C00F0003800300038002000380020003800200070002000700020007008
200070080000E0100000E0100000E0300000FFF00001C0200001C0200001C0200001C020
0003804080038000800380008003800100070001000700030007000200070006000E003C
00FFFFFC001C1C7E9B1C>69 D<0003F020001E0C60003002E000E003C001C001C0038001
C0070000C00E0000801E0000801C0000803C0000803C0000007800000078000000780000
00F0000000F0000000F001FF80F0001E00F0001C00F0001C00F0001C00F0001C00700038
007000380038003800180078000C0090000707100001F800001B1E7A9C20>71
D<01FFC3FF80003C0078000038007000003800700000380070000038007000007000E000
007000E000007000E000007000E00000E001C00000E001C00000E001C00000FFFFC00001
C003800001C003800001C003800001C00380000380070000038007000003800700000380
07000007000E000007000E000007000E000007000E00000F001E0000FFE1FFC000211C7E
9B1F>I<01FFC07F80003C001E0000380018000038002000003800400000380080000070
02000000700400000070080000007010000000E040000000E0C0000000E1C0000000E2E0
000001C4E0000001D070000001E070000001C07000000380380000038038000003801800
0003801C000007001C000007000E000007000E000007000E00000F000F0000FFE07FC000
211C7E9B20>75 D<01FFC0003C0000380000380000380000380000700000700000700000
700000E00000E00000E00000E00001C00001C00001C00001C00003800203800203800203
800407000407000C0700180700380E00F0FFFFF0171C7E9B1A>I<01FE0001FE003E0001
E0002E0003C0002E0005C0002E0005C0002E0009C0004E000B80004E001380004E002380
004700238000870047000087004700008700870000870107000107010E000107020E0001
07040E000107040E000207081C000203881C000203901C000203A01C000403A038000403
C038000403C038000C038038001C03007800FF8307FF00271C7E9B25>I<01FC00FF8000
1C001C00002E001800002E001000002E0010000027001000004700200000430020000043
80200000438020000081C040000081C040000081C040000080E040000100E08000010070
80000100708000010070800002003900000200390000020039000002001D000004001E00
0004000E000004000E00000C000E00001C00040000FF80040000211C7E9B1F>I<01FFFE
00003C0380003801C0003800E0003800E0003800E0007001E0007001E0007001E0007001
C000E003C000E0038000E0070000E01C0001FFF00001C0000001C0000001C00000038000
00038000000380000003800000070000000700000007000000070000000F000000FFE000
001B1C7E9B1C>80 D<000F8400304C00403C008018010018030018030018060010060010
06000007000007000003E00003FC0001FF00007F800007C00001C00001C00000C00000C0
2000C02000C0600180600180600300600200F00400CC180083E000161E7D9C17>83
D<1FFFFFC01C0701C0300E00C0200E0080600E0080400E0080401C0080801C0080801C00
80001C000000380000003800000038000000380000007000000070000000700000007000
0000E0000000E0000000E0000000E0000001C0000001C0000001C0000001C0000003C000
007FFE00001A1C799B1E>I<FFC00FE01E0003800E0002000E0004000F000C0007000800
07801000038020000380400003C0C00001C0800001C1000001E2000000E4000000EC0000
00F80000007000000070000000E0000000E0000000E0000000E0000001C0000001C00000
01C0000001C00000038000003FF800001B1C789B1F>89 D<01FFFF8001E0070003800E00
03001E0002001C0002003800040070000400E0000401C0000001C0000003800000070000
000E0000001C0000001C0000003800000070000000E0080001C0100001C0100003801000
070020000E0020001C0060003C00C0003801C00070078000FFFF8000191C7D9B19>I<04
080810102020402040408040808100E1C0F1E0F1E0E1C00D0C749C15>92
D<01E307170C0F180F380E300E700E700EE01CE01CE01CE01CE039E039E0396079319A1E
0C10127C9115>97 D<3F00070007000E000E000E000E001C001C001C001C0039E03A183C
0C380C700C700E700E700EE01CE01CE01CE018E038E030E06060C031801E000F1D7C9C13
>I<00F803040E041C0E181C300070007000E000E000E000E000E000E004600860103060
0F800F127C9113>I<0007E00000E00000E00001C00001C00001C00001C0000380000380
00038000038001E7000717000C0F00180F00380E00300E00700E00700E00E01C00E01C00
E01C00E01C00E03900E03900E03900607900319A001E0C00131D7C9C15>I<00F807040C
0418023804300470087FF0E000E000E000E000E00060046008301030600F800F127C9113
>I<0003C0000670000C70001C60001C00001C0000380000380000380000380000380003
FF8000700000700000700000700000700000E00000E00000E00000E00000E00001C00001
C00001C00001C00001C000038000038000038000030000030000070000C60000E60000CC
00007800001425819C0D>I<0078C001C5C00303C00603C00E03800C03801C03801C0380
380700380700380700380700380E00380E00380E00181E000C7C00079C00001C00001C00
003800003800C03000E07000C1C0007F0000121A7E9113>I<0FC00001C00001C0000380
000380000380000380000700000700000700000700000E3E000EC3000F03800E03801E03
801C03801C03801C0380380700380700380700380E00700E40700E40701C40701C80E00C
80600700121D7E9C15>I<01800380010000000000000000000000000000001C00260047
0047008E008E000E001C001C001C0038003800710071007100720072003C00091C7C9B0D
>I<0FC00001C00001C0000380000380000380000380000700000700000700000700000E
07800E08800E11C00E21C01C41801C80001D00001E00003FC00038E00038700038700070
7100707100707100707200E03200601C00121D7E9C13>107 D<1F800380038007000700
070007000E000E000E000E001C001C001C001C0038003800380038007000700070007000
E200E200E200E40064003800091D7D9C0B>I<1C1E0780266318C04683A0E04703C0E08E
0380E08E0380E00E0380E00E0380E01C0701C01C0701C01C0701C01C070380380E038838
0E0388380E0708380E0710701C0320300C01C01D127C9122>I<383E004CC3004D03804E
03809E03809C03801C03801C0380380700380700380700380E00700E40700E40701C4070
1C80E00C8060070012127C9117>I<00F800030C000E06001C0300180300300300700380
700380E00700E00700E00700E00E00E00E00E01C0060180060300030E0000F800011127C
9115>I<03878004C86004D03004E03009C03009C03801C03801C0380380700380700380
700380600700E00700C00701800783000E86000E78000E00000E00001C00001C00001C00
001C0000380000FF0000151A809115>I<1C3C2642468747078E068E000E000E001C001C
001C001C0038003800380038007000300010127C9112>114 D<01F006080C080C1C1818
1C001F001FC00FF007F0007800386030E030C030806060C01F000E127D9111>I<030007
00070007000E000E000E000E00FFE01C001C001C00380038003800380070007000700070
00E080E080E100E100660038000B1A7C990E>I<1C01802E03804E03804E03808E07008E
07001C07001C0700380E00380E00380E00380E00301C80301C80301C80383C80184D000F
860011127C9116>I<1C062E0E4E064E068E028E021C021C023804380438043808300830
083010382018400F800F127C9113>I<1E01832703874703874703838707018707010E07
010E07011C0E021C0E021C0E021C0E04180C04181C04181C081C1E080C263007C3C01812
7C911C>I<0387800CC8400870E01070E020E0C020E00000E00000E00001C00001C00001
C00001C000038100638100E38200C5820085840078780013127E9113>I<1C01802E0380
4E03804E03808E07008E07001C07001C0700380E00380E00380E00380E00301C00301C00
301C00383C001878000FB800003800003000007000E06000E0C0008180004300003C0000
111A7C9114>I<01C107E10FF6081C10080010002000400080010002000400080410042C
0C73F841F080E010127E9111>I E /Fm 14 122 df<00FE0007FF800E07E01803F02001
F82000F840007C40007CF8007EFC007EFC003EFC003EFC003E78007E00007E00007C0000
7C0000F80000F80001F00001E00003C0000780000700000E00001C000038000070000060
0000C0000180020300020600040C000418000410000C3FFFFC7FFFF8FFFFF8FFFFF81728
7DA71E>50 D<007F000003FFC0000701F0000C00F80010007C001C007C003E007E003E00
3E003E003E001E003E000C007E0000007C0000007C00000078000000F0000000E0000001
C0000007000000FF00000001E0000000F0000000780000003C0000003E0000001F000000
1F0000001F8000001F8030001F8078001F80FC001F80FC001F80FC001F00F8001F004000
3F0040003E0030007C001800F8000F01F00003FFC00000FF000019297EA71E>I<007F00
0001FFC0000381F000060078000C003C001C001C0018000E0038000E0038000E0038000E
003C000E003C000E003E001C001F8018001FC030000FF0600007F8C00003FF800000FF00
00007FC00000FFE000030FF8000607FC000C01FE001800FE0030003F0070001F0070000F
80E0000780E0000380E0000380E0000380E0000380E0000300700007007800060038000C
001E0038000F80F00003FFE000007F000019297EA71E>56 D<78FCFCFCFC780000000000
00000000000000000078FCFCFCFC78061A7B9911>58 D<01FFFF01FFFF0003F00001F000
01F00001F00001F00001F00001F00001F00001F00001F00001F00001F00001F00001F000
01F00001F00001F00001F00001F00001F00001F00001F00001F00001F00001F00001F000
01F00001F00001F03001F07801F0FC01F0FC01F0FC01E0F803E04003C02007801007000C
1E0003F000182A7DA81F>74 D<FFFFC000FFFFC00007F0000003E0000003E0000003E000
0003E0000003E0000003E0000003E0000003E0000003E0000003E0000003E0000003E000
0003E0000003E0000003E0000003E0000003E0000003E0000003E0000003E0000003E000
0003E0000003E0000103E0000103E0000103E0000103E0000203E0000203E0000203E000
0203E0000603E0000603E0000E03E0001E03E0007C07E001FCFFFFFFFCFFFFFFFC20297E
A825>76 D<01FC00000E0780001001C0003C00E0003E00F0003E0078001C007800080078
00000078000000780000007800007FF80003E078000F8078001F0078003E0078007C0078
0078007820F8007820F8007820F8007820F800F8207C00F8203C013C401F063FC007F80F
001B1A7E991E>97 D<007F8001C0700780080F003C1E007C3C007C3C00387C0010780000
F80000F80000F80000F80000F80000F80000F80000F800007800007C00003C00043C0004
1E00080F001007802001C0C0007F00161A7E991B>99 D<007E0003C3800700E00E00F01C
00703C00783C003878003C78003CF8003CF8003CFFFFFCF80000F80000F80000F80000F8
00007800007C00003C00043C00041E00080E001007002001C0C0007F00161A7E991B>
101 D<0F07F000FF183800FF201C001F400E000F400F000F800F000F800F000F000F000F
000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F
000F000F000F000F000F000F000F000F000F000F000F000F000F00FFF0FFF0FFF0FFF01C
1A7E9921>110 D<0F0F80FF11C0FF23E01F43E00F83E00F81C00F80000F00000F00000F
00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F
00000F00000F8000FFF800FFF800131A7E9917>114 D<00800000800000800000800001
80000180000180000380000380000780000F80001FFF80FFFF8007800007800007800007
800007800007800007800007800007800007800007800007800007800007804007804007
804007804007804007804007804003C08001C08000E100003E0012257FA417>116
D<0F000F00FF00FF00FF00FF001F001F000F000F000F000F000F000F000F000F000F000F
000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F
000F000F000F000F000F001F000F001F0007002F0003804F8001C08FF0007F0FF01C1A7E
9921>I<FFF00FF8FFF00FF80F8003C0078001800780010003C0020003C0020003C00200
01E0040001E0040000F0080000F0080000F808000078100000781000003C2000003C2000
003E6000001E4000001E4000000F8000000F800000070000000700000007000000020000
000200000004000000040000000400000008000070080000F8100000F8100000F8200000
F0400000608000001F0000001D267F9920>121 D E /Fn 52 122
df<003FC00001F0300003C0380007C07C000F807C000F807C000F8038000F8000000F80
00000F8000000F800000FFFFFC00FFFFFC000F807C000F807C000F807C000F807C000F80
7C000F807C000F807C000F807C000F807C000F807C000F807C000F807C000F807C000F80
7C007FE1FF807FE1FF80191D809C1B>12 D<003C000000E3000001C1000003C180000381
80000781800007C1000007C3000007C2000007C4000007C8000003F001FF03E001FF03E0
003001F0006001F800C002F800C004FC01800C7E0300187E0300383F0600781F8C00F80F
D800F807F000FC03F0067C01F8067E0F7E1C3FFE3FF807F007F0201D7E9C25>38
D<0020004001800380030006000E001C001C003C0038003800780078007800F800F000F0
00F000F000F000F000F000F000F000F800780078007800380038003C001C001C000E0006
00030003800180004000200B297C9E13>40 D<800040003000380018000C000E00070007
0007800380038003C003C003C003E001E001E001E001E001E001E001E001E001E003E003
C003C003C0038003800780070007000E000C00180038003000400080000B297D9E13>I<
FFF8FFF8FFF8FFF80D04808A10>45 D<78FCFCFCFC7806067D850D>I<03F8000F1E001C
07003C07803803807803C07803C07803C0F803E0F803E0F803E0F803E0F803E0F803E0F8
03E0F803E0F803E0F803E0F803E0F803E07803C07803C03803803C07801C07000F1E0003
F800131B7E9A18>48 D<00600001E0000FE000FFE000F3E00003E00003E00003E00003E0
0003E00003E00003E00003E00003E00003E00003E00003E00003E00003E00003E00003E0
0003E00003E00003E00003E0007FFF807FFF80111B7D9A18>I<07F8001FFE00383F8078
0FC0FC07C0FC07E0FC03E0FC03E07803E00007E00007C00007C0000F80001F00001E0000
380000700000E0000180600300600600600800E01FFFC03FFFC07FFFC0FFFFC0FFFFC013
1B7E9A18>I<07F8001FFE003C1F003C0F807C07C07E07C07C07C03807C0000F80000F80
001E00003C0003F800001E00000F800007C00007C00007E03007E07807E0FC07E0FC07E0
FC07C0780F80781F001FFE0007F800131B7E9A18>I<000180000380000780000F80001F
80003F80006F8000CF80008F80018F80030F80060F800C0F80180F80300F80600F80C00F
80FFFFF8FFFFF8000F80000F80000F80000F80000F80000F8000FFF800FFF8151B7F9A18
>I<3801803FFF003FFE003FFC003FF8003FC00030000030000030000030000031F80036
1E00380F803007800007C00007E00007E00007E07807E0F807E0F807E0F807C0F007C060
0F80381F001FFE0007F000131B7E9A18>I<007E0003FF000781800F03C01E07C03C07C0
7C0380780000780000F80000F8F800FB0E00FA0780FC0380FC03C0F803E0F803E0F803E0
F803E07803E07803E07803C03C03C03C07801E0F0007FE0003F800131B7E9A18>I<6000
007FFFE07FFFE07FFFC07FFF807FFF80E00300C00600C00C00C018000030000030000060
0000E00000E00001E00001C00003C00003C00003C00003C00007C00007C00007C00007C0
0007C00007C000038000131C7D9B18>I<03F8000FFE001E0F003C07807807807803C0F8
03C0F803C0F803E0F803E0F803E0F803E07807E03807E03C0BE00E1BE003E3E00003E000
03C00003C03807C07C07807C0700780F00383C001FF8000FE000131B7E9A18>57
D<78FCFCFCFC7800000000000078FCFCFCFC7806127D910D>I<00038000000380000007
C0000007C0000007C000000FE000000FE000001FF000001BF000003BF8000031F8000031
F8000060FC000060FC0000E0FE0000C07E0000C07E0001803F0001FFFF0003FFFF800300
1F8007001FC006000FC006000FC00C0007E00C0007E0FF803FFEFF803FFE1F1C7E9B24>
65 D<FFFFF800FFFFFF000FC01F800FC00FC00FC007C00FC007E00FC007E00FC007E00F
C007E00FC007E00FC007C00FC00F800FC03F000FFFFE000FC00F800FC007C00FC003E00F
C003E00FC003F00FC003F00FC003F00FC003F00FC003F00FC007E00FC007E00FC01FC0FF
FFFF00FFFFFC001C1C7E9B22>I<001FE02000FFF8E003F80FE007C003E00F8001E01F00
00E03E0000E03E0000607E0000607C000060FC000000FC000000FC000000FC000000FC00
0000FC000000FC000000FC0000007C0000607E0000603E0000603E0000C01F0000C00F80
018007C0030003F80E0000FFFC00001FE0001B1C7D9B22>I<FFFFF800FFFFFF000FC01F
C00FC007E00FC001F00FC001F80FC000F80FC000FC0FC0007C0FC0007C0FC0007E0FC000
7E0FC0007E0FC0007E0FC0007E0FC0007E0FC0007E0FC0007E0FC0007C0FC0007C0FC000
7C0FC000F80FC000F80FC001F00FC007E00FC01FC0FFFFFF00FFFFF8001F1C7E9B25>I<
FFFFFF00FFFFFF000FC01F000FC007000FC003000FC003800FC003800FC0C1800FC0C180
0FC0C1800FC1C0000FC3C0000FFFC0000FFFC0000FC3C0000FC1C0000FC0C0000FC0C060
0FC0C0600FC000E00FC000C00FC000C00FC001C00FC001C00FC003C00FC00F80FFFFFF80
FFFFFF801B1C7E9B1F>I<000FF008007FFE3801FC07F807E001F80F8000781F0000783F
0000383E0000387E0000187C000018FC000000FC000000FC000000FC000000FC000000FC
000000FC007FFFFC007FFF7C0001F87E0001F83E0001F83F0001F81F0001F80F8001F807
E001F801FC07F8007FFE78000FF818201C7D9B26>71 D<FFFC07FF00FFFC07FF000FC000
E0000FC001C0000FC00380000FC00600000FC00C00000FC03800000FC07000000FC0E000
000FC1C000000FC3C000000FC7E000000FCFF000000FFBF000000FF1F800000FE0FC0000
0FC0FE00000FC07E00000FC03F00000FC01F80000FC01FC0000FC00FC0000FC007E0000F
C007F0000FC003F800FFFC1FFF80FFFC1FFF80211C7E9B25>75 D<FFFE00FFFE000FC000
0FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC000
0FC0000FC0000FC0030FC0030FC0030FC0070FC0070FC0060FC00E0FC01E0FC07EFFFFFE
FFFFFE181C7E9B1D>I<FFC00003FFFFE00007FF0FE00007F00DF0000DF00DF0000DF00D
F0000DF00CF80019F00CF80019F00C7C0031F00C7C0031F00C3E0061F00C3E0061F00C1F
00C1F00C1F00C1F00C1F00C1F00C0F8181F00C0F8181F00C07C301F00C07C301F00C03E6
01F00C03E601F00C01FC01F00C01FC01F00C01FC01F00C00F801F00C00F801F0FFC0701F
FFFFC0701FFF281C7E9B2D>I<FFE003FFFFE003FF0FF000300FF800300DFC00300CFE00
300C7E00300C3F00300C1F80300C1FC0300C0FE0300C07F0300C03F0300C01F8300C01FC
300C00FE300C007F300C003F300C001FB00C001FF00C000FF00C0007F00C0003F00C0001
F00C0000F00C0000F0FFC00070FFC00030201C7E9B25>I<FFFFF800FFFFFE000FC03F80
0FC00F800FC007C00FC007E00FC007E00FC007E00FC007E00FC007E00FC007C00FC007C0
0FC00F800FC03F000FFFFC000FC000000FC000000FC000000FC000000FC000000FC00000
0FC000000FC000000FC000000FC000000FC00000FFFC0000FFFC00001B1C7E9B21>80
D<FFFFF00000FFFFFE00000FC03F00000FC00F80000FC007C0000FC007E0000FC007E000
0FC007E0000FC007E0000FC007E0000FC007C0000FC00F80000FC03E00000FFFF000000F
C07C00000FC03E00000FC03F00000FC01F80000FC01F80000FC01F80000FC01F80000FC0
1F80000FC01F80000FC01F81800FC01F81800FC00FC180FFFC07C300FFFC01FE00211C7E
9B24>82 D<07F8201FFEE03C07E07801E07000E0F000E0F00060F00060F80000FE0000FF
E0007FFE003FFF003FFF800FFFC007FFE0007FE00003F00001F00000F0C000F0C000F0C0
00E0E000E0F001C0FC03C0EFFF0083FC00141C7D9B1B>I<7FFFFFE07FFFFFE0781F81E0
701F80E0601F8060E01F8070C01F8030C01F8030C01F8030C01F8030001F8000001F8000
001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000
001F8000001F8000001F8000001F8000001F800007FFFE0007FFFE001C1C7E9B21>I<FF
FC03FFFFFC03FF0FC000300FC000300FC000300FC000300FC000300FC000300FC000300F
C000300FC000300FC000300FC000300FC000300FC000300FC000300FC000300FC000300F
C000300FC000300FC0003007C0003007C0006003E000E001F001C000FC0780007FFE0000
0FF800201C7E9B25>I<0FF8001C1E003E0F803E07803E07C01C07C00007C0007FC007E7
C01F07C03C07C07C07C0F807C0F807C0F807C0780BC03E13F80FE1F815127F9117>97
D<FF0000FF00001F00001F00001F00001F00001F00001F00001F00001F00001F00001F3F
801FE1E01F80701F00781F003C1F003C1F003E1F003E1F003E1F003E1F003E1F003E1F00
3C1F003C1F00781F80701EC1E01C3F00171D7F9C1B>I<03FC000E0E001C1F003C1F0078
1F00780E00F80000F80000F80000F80000F80000F800007800007801803C01801C03000E
0E0003F80011127E9115>I<000FF0000FF00001F00001F00001F00001F00001F00001F0
0001F00001F00001F001F9F00F07F01C03F03C01F07801F07801F0F801F0F801F0F801F0
F801F0F801F0F801F07801F07801F03C01F01C03F00F0FFE03F9FE171D7E9C1B>I<03FC
000F07001C03803C01C07801C07801E0F801E0F801E0FFFFE0F80000F80000F800007800
007800603C00601E00C00F038001FC0013127F9116>I<007F0001E38003C7C00787C00F
87C00F83800F80000F80000F80000F80000F8000FFF800FFF8000F80000F80000F80000F
80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80007FF0007F
F000121D809C0F>I<03F0F00E1F383C0F38380730780780780780780780780780380700
3C0F001E1C0033F0003000003000003000003FFF003FFFC01FFFE01FFFF07801F8F00078
F00078F000787000707800F01E03C007FF00151B7F9118>I<FF0000FF00001F00001F00
001F00001F00001F00001F00001F00001F00001F00001F0FC01F31E01F40F01F80F81F80
F81F00F81F00F81F00F81F00F81F00F81F00F81F00F81F00F81F00F81F00F81F00F8FFE7
FFFFE7FF181D7F9C1B>I<1E003F003F003F003F001E000000000000000000000000007F
007F001F001F001F001F001F001F001F001F001F001F001F001F001F001F00FFC0FFC00A
1E7F9D0E>I<FF00FF001F001F001F001F001F001F001F001F001F001F001F001F001F00
1F001F001F001F001F001F001F001F001F001F001F001F00FFE0FFE00B1D7F9C0E>108
D<FF0FC07E00FF31E18F001F40F207801F80FC07C01F80FC07C01F00F807C01F00F807C0
1F00F807C01F00F807C01F00F807C01F00F807C01F00F807C01F00F807C01F00F807C01F
00F807C01F00F807C0FFE7FF3FF8FFE7FF3FF825127F9128>I<FF0FC0FF31E01F40F01F
80F81F80F81F00F81F00F81F00F81F00F81F00F81F00F81F00F81F00F81F00F81F00F81F
00F8FFE7FFFFE7FF18127F911B>I<01FC000F07801C01C03C01E07800F07800F0F800F8
F800F8F800F8F800F8F800F8F800F87800F07800F03C01E01E03C00F078001FC0015127F
9118>I<FF3F80FFE1E01F80F01F00781F007C1F003C1F003E1F003E1F003E1F003E1F00
3E1F003E1F003C1F007C1F00781F80F01FC1E01F3F001F00001F00001F00001F00001F00
001F0000FFE000FFE000171A7F911B>I<FE3E00FE47001E8F801E8F801E8F801F07001F
00001F00001F00001F00001F00001F00001F00001F00001F00001F0000FFE000FFE00011
127F9114>114 D<1FD830786018E018E018F000FF807FE07FF01FF807FC007CC01CC01C
E01CE018F830CFC00E127E9113>I<0300030003000300070007000F000F003FFCFFFC1F
001F001F001F001F001F001F001F001F001F0C1F0C1F0C1F0C0F08079803F00E1A7F9913
>I<FF07F8FF07F81F00F81F00F81F00F81F00F81F00F81F00F81F00F81F00F81F00F81F
00F81F00F81F00F81F01F80F01F80786FF01F8FF18127F911B>I<FFC1FCFFC1FC1F0060
1F80600F80C00F80C007C18007C18003E30003E30003F70001F60001FE0000FC0000FC00
00780000780000300016127F9119>I<FFC7FCFFC7FC1F81C00F838007C70003EE0001FC
0001F80000F800007C0000FE0001DF00039F80070F800607C00C03E0FF07FCFF07FC1612
7F9119>120 D<FFC1FCFFC1FC1F00601F80600F80C00F80C007C18007C18003E30003E3
0003F70001F60001FE0000FC0000FC00007800007800003000003000006000706000F8E0
00F8C000F980007300003E0000161A7F9119>I E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300dpi
TeXDict begin

%%EndSetup
%%Page: 1 1
1 0 bop 80 96 1940 2 v 80 376 2 280 v 122 161 a Fn(CS270)31
b(Com)o(binatorial)12 b(Algorithms)h(&)j(Data)f(Structures)489
b(Spring)14 b(1997)750 258 y Fm(Lecture)20 b(3:)26 b(Jan)n(uary)20
b(28)122 332 y Fl(L)n(e)n(ctur)n(er:)e(Edith)d(Cohen)1090
b(Scrib)n(e:)18 b(Y)m(an)e(Zhuang)p 2018 376 V 80 378
1940 2 v 75 630 a Fk(3.1)70 b(F)-6 b(orests)23 b(and)h(T)-6
b(rees)75 753 y Fn(De\014nitio)o(n)13 b(3.1)21 b Fl(Given)11
b(an)g(undir)n(e)n(cte)n(d)f(gr)n(aph)h Fj(G)g Fi(=)h(\()p
Fj(V)r(;)7 b(E)r Fi(\))p Fl(,)12 b(an)f(acyclic)g(sub)n(gr)n(aph)f(of)h
Fj(G)f Fl(is)h(a)g Fn(forest)p Fl(,)e(and)j(a)e(c)n(onne)n(cte)n(d,)75
803 y(acyclic)15 b(sub)n(gr)n(aph)g(of)g Fj(G)f Fl(is)h(a)g
Fn(tree)p Fl(.)75 933 y Fn(Theorem)g(3.2)20 b Fl(A)o(n)c(undir)n(e)n
(cte)n(d)g(gr)n(aph)f Fj(G)e Fi(=)g(\()p Fj(V)r(;)7 b(E)r
Fi(\))16 b Fl(is)f(a)h(for)n(est)f(if)g(and)h(only)g(if)f
Fj(c)10 b Fi(+)g Fj(m)j Fi(=)g Fj(n)p Fl(,)i(wher)n(e)g
Fj(c)h Fl(is)f(the)h(numb)n(er)75 983 y(of)f(c)n(onne)n(cte)n(d)h(c)n
(omp)n(onents)f(of)g Fj(G)p Fl(,)f Fj(n)e Fi(=)g Fh(j)p
Fj(V)d Fh(j)14 b Fl(and)i Fj(m)c Fi(=)f Fh(j)p Fj(E)r
Fh(j)p Fl(.)75 1113 y Fn(Pro)q(of:)25 b Fi(\(=)-7 b Fh(\))p
Fi(:\))18 b(Assume)g(that)f Fj(G)h Fi(is)f(a)h(forest.)30
b(The)18 b(pro)q(of)g(is)f(b)o(y)h(induction)f(on)h Fj(m)p
Fi(.)30 b(If)17 b Fj(m)i Fi(=)f(0,)g(the)h(graph)e(has)h
Fj(n)75 1162 y Fi(isolated)d(notes)i(and)e(hence)i Fj(c)e
Fi(=)g Fj(n)p Fi(.)23 b(Therefore)17 b Fj(c)10 b Fi(+)h
Fj(m)k Fi(=)g Fj(n)g Fi(holds)h(for)f Fj(m)g Fi(=)g(0.)23
b(Assume)16 b(that)f Fj(c)c Fi(+)g Fj(m)k Fi(=)f Fj(n)i
Fi(holds)f(for)75 1212 y(all)g Fj(m)h(<)f(i)h Fi(for)g(some)f
Fj(i)h(>)g Fi(0.)24 b(Consider)17 b(a)e(graph)h Fj(G)g
Fi(with)g Fj(m)f Fi(=)h Fj(i)p Fi(.)25 b(If)16 b(w)o(e)g(delete)h(one)g
(edge)f(from)f Fj(G)p Fi(,)g(the)i(n)o(um)o(b)q(er)f(of)75
1262 y(edges)h(in)e Fj(G)h Fi(b)q(ecomes)g Fj(i)11 b
Fh(\000)g Fi(1,)16 b(while)f(the)i(n)o(um)o(b)q(er)e(of)g(connected)j
(comp)q(onen)o(ts)e(increases)h(to)f Fj(c)11 b Fi(+)g(1.)24
b(By)16 b(assumption,)75 1312 y(\()p Fj(c)9 b Fi(+)h(1\))f(+)g(\()p
Fj(i)h Fh(\000)g Fi(1\))h(=)h Fj(n)p Fi(.)18 b(Therefore)d
Fj(c)9 b Fi(+)h Fj(m)i Fi(=)f Fj(n)j Fi(holds)g(for)f
Fj(m)f Fi(=)g Fj(i)p Fi(.)75 1392 y(\()p Fh(\()-7 b Fi(=:\))12
b(Assume)f(that)h Fj(c)5 b Fi(+)g Fj(m)13 b Fi(=)f Fj(n)g
Fi(holds)g(for)f Fj(G)p Fi(.)17 b(If)12 b Fj(G)f Fi(is)h(not)g(a)g
(forest,)g(then)h Fj(G)e Fi(con)o(tains)h(at)g(least)g(one)g(cycle.)19
b(Remo)o(ving)75 1442 y(an)12 b(edge)g(from)f(a)g(cycle)i(do)q(es)g
(not)f(increase)h(the)f(n)o(um)o(b)q(er)g(of)f(comp)q(onen)o(ts)h
Fj(c)p Fi(.)17 b(Assume)12 b(that)g(w)o(e)g(need)h(to)f(remo)o(v)o(e)f
Fj(k)i Fi(edges)75 1491 y(from)i Fj(G)g Fi(to)i(obtain)e(an)h(acyclic)h
(subgraph)f Fj(T)23 b Fi(\(the)17 b(v)n(alue)e(of)h Fj(c)g
Fi(is)g(not)h(increased\).)26 b(Since)17 b Fj(T)23 b
Fi(is)16 b(a)g(forest)h(with)f Fj(m)11 b Fh(\000)g Fj(k)75
1541 y Fi(edges,)j Fj(c)g Fi(connected)i(comp)q(onen)o(ts)d(and)h
Fj(n)g Fi(no)q(des,)g(then)h Fj(c)9 b Fi(+)g(\()p Fj(m)h
Fh(\000)f Fj(k)q Fi(\))j(=)g Fj(n)p Fi(.)18 b(Therefore)d
Fj(c)9 b Fi(+)g Fj(m)j(>)g(n)p Fi(,)h(since)i Fj(k)e
Fh(\025)e Fi(1.)18 b(This)75 1591 y(con)o(tradicts)d(the)f(assumption)f
(that)h Fj(c)9 b Fi(+)g Fj(m)j Fi(=)g Fj(n)p Fi(.)p 2001
1591 24 24 v 75 1771 a Fk(3.2)70 b(Minim)n(um)20 b(Spanning)k(T)-6
b(ree)75 1894 y Fn(De\014nitio)o(n)13 b(3.3)21 b Fl(Given)e(an)h(undir)
n(e)n(cte)n(d)g(gr)n(aph)f Fj(G)h Fi(=)g(\()p Fj(V)r(;)7
b(E)r Fi(\))p Fl(,)20 b(a)g(sub)n(gr)n(aph)g Fj(T)25
b Fl(is)19 b(a)h Fn(spanning)f(tree)f Fl(of)h Fj(G)h
Fl(if)e(it)h(is)75 1944 y(c)n(onne)n(cte)n(d,)c(acyclic)g(and)h(it)e(c)
n(onne)n(cts)i(al)r(l)e(vertic)n(es)g(of)h Fj(G)p Fl(.)525
2058 y
 16577003 7293880 11906498 23418306 26970521 30128046 startTexFig
 525 2058 a
%%BeginDocument: figs/st.ps

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


/arrowHeight 11 def
/arrowWidth 5 def

/IdrawDict 50 dict def
IdrawDict begin

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def


%I Idraw 10 Grid 8 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.754552 0 0 0.754552 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Line
%I b 65535
5 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 197 260 ] concat
%I
50 313 139 343 Line
%I 1
End

Begin %I Line
%I b 65535
5 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 197 260 ] concat
%I
139 343 173 269 Line
%I 1
End

Begin %I Line
%I b 65535
5 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 197 260 ] concat
%I
173 269 228 341 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 197 260 ] concat
%I
141 342 229 341 Line
%I 1
End

Begin %I Line
%I b 65535
5 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 197 260 ] concat
%I
174 269 273 248 Line
%I 1
End

Begin %I Line
%I b 65535
5 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 197 260 ] concat
%I
274 248 342 318 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 197 260 ] concat
%I
49 311 48 217 Line
%I 1
End

Begin %I Line
%I b 65535
5 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 197 260 ] concat
%I
49 217 174 270 Line
%I 1
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 457 2611 a Fi(Figure)f(3.1:)j(One)e(example)d(of)i(the)g(spanning)g
(tree:)19 b(the)14 b(mark)o(ed)f(edges.)1022 2769 y(3-1)p
eop
%%Page: 2 2
2 1 bop -75 -130 a Fi(3-2)1491 b Fg(Lecture)16 b(3:)i(Jan)o(uary)13
b(28)-75 136 y Fn(De\014nitio)o(n)g(3.4)21 b Fl(Given)16
b(an)g(undir)n(e)n(cte)n(d)f(gr)n(aph)h Fj(G)d Fi(=)g(\()p
Fj(V)r(;)7 b(E)r Fi(\))p Fl(,)16 b(and)g(a)g(p)n(ositive)f(weight)h
(function)g Fj(w)d Fi(:)g Fj(E)i Fh(\000)-7 b(!)13 b
Fj(R)1742 121 y Ff(+)1769 136 y Fl(,)j(then)-75 186 y
Fj(T)j Fl(is)14 b(a)f(minimum)h(sp)n(anning)g(tr)n(e)n(e)f(\(MST\))h
(of)f Fj(G)g Fl(if)g Fj(T)20 b Fl(is)13 b(a)g(sp)n(anning)i(tr)n(e)n(e)
e(of)g Fj(G)g Fl(and)i Fj(w)q Fi(\()p Fj(T)6 b Fi(\))11
b(=)1448 155 y Fe(P)1492 199 y Fd(e)p Fc(2)p Fd(T)1563
186 y Fj(w)q Fi(\()p Fj(e)p Fi(\))j Fl(is)f(minimum)-75
236 y(among)j(al)r(l)e(sp)n(anning)i(tr)n(e)n(es)e(of)h
Fj(G)p Fl(.)-75 388 y Fb(3.2.1)55 b(Krusk)m(al's)18 b(Algorithm)14
496 y Fn(Algorithm:)g(MST-KR)o(USKAL\()p Fj(G;)7 b(w)q
Fn(\))14 546 y(step)15 b(0:)j Fj(T)g Fi(=)11 b Fj(\036)14
596 y Fn(step)k(1:)j Fi(Sort)c(all)f(edges)i(of)e Fj(G)h
Fi(in)f(increasing)h(w)o(eigh)o(t:)k Fj(e)933 602 y Ff(1)952
596 y Fj(;)7 b(e)990 602 y Ff(2)1008 596 y Fj(;)g(:)g(:)g(:)e(;)i(e)
1120 602 y Fd(m)1151 596 y Fi(,)13 b(suc)o(h)i(that)f
Fj(w)q Fi(\()p Fj(e)1426 602 y Ff(1)1445 596 y Fi(\))e
Fh(\024)f Fj(w)q Fi(\()p Fj(e)1582 602 y Ff(2)1601 596
y Fi(\))c Fj(:)g(:)g(:)j Fh(\024)i Fj(w)q Fi(\()p Fj(e)1794
602 y Fd(m)1826 596 y Fi(\).)14 646 y Fn(step)j(2:)j(for)13
b Fi(eac)o(h)h(edge)h Fj(e)450 652 y Fd(i)464 646 y Fi(,)f
Fj(i)d Fi(=)h(1)p Fj(;)7 b Fi(2)p Fj(;)g(:)g(:)g(:)t(;)g(m)14
b Fn(do)280 696 y(if)f Fj(e)341 702 y Fd(i)367 696 y
Fi(=)f(\()p Fj(u;)7 b(v)q Fi(\))13 b(is)h(suc)o(h)h(that)f
Fj(u)f Fi(and)h Fj(v)i Fi(are)e(in)f(di\013eren)o(t)i(comp)q(onen)o
(ts,)e Fn(then)369 745 y Fj(T)18 b Fi(=)12 b Fj(T)j Fh([)9
b(f)p Fj(e)571 751 y Fd(i)585 745 y Fh(g)p Fi(.)280 795
y Fn(endif)375 959 y
 16577003 4807330 1973452 21510635 37429821 32035717 startTexFig
 375 959 a
%%BeginDocument: figs/mst.ps

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


/arrowHeight 11 def
/arrowWidth 5 def

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica-Oblique reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def


%I Idraw 10 Grid 8 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.754552 0 0 0.754552 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -40 258 ] concat
%I
94 325 172 367 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -40 258 ] concat
%I
172 367 204 190 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -40 258 ] concat
%I
204 190 303 354 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -40 258 ] concat
%I
94 324 101 209 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -40 258 ] concat
%I
101 209 204 190 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -40 258 ] concat
%I
204 190 371 229 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -40 258 ] concat
%I
371 229 411 358 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -40 258 ] concat
%I
173 366 303 352 Line
%I 1
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-o-normal--*-180-*
Helvetica-Oblique 18 SetF
%I t
[ 1 0 0 1 133 548 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-o-normal--*-180-*
Helvetica-Oblique 18 SetF
%I t
[ 1 0 0 1 42 534 ] concat
%I
[
(2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-o-normal--*-180-*
Helvetica-Oblique 18 SetF
%I t
[ 1 0 0 1 80 621 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-o-normal--*-180-*
Helvetica-Oblique 18 SetF
%I t
[ 1 0 0 1 188 639 ] concat
%I
[
(2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-o-normal--*-180-*
Helvetica-Oblique 18 SetF
%I t
[ 1 0 0 1 338 567 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-o-normal--*-180-*
Helvetica-Oblique 18 SetF
%I t
[ 1 0 0 1 105 480 ] concat
%I
[
(5)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-o-normal--*-180-*
Helvetica-Oblique 18 SetF
%I t
[ 1 0 0 1 252 490 ] concat
%I
[
(6)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-o-normal--*-180-*
Helvetica-Oblique 18 SetF
%I t
[ 1 0 0 1 156 550 ] concat
%I
[
(e1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-o-normal--*-180-*
Helvetica-Oblique 18 SetF
%I t
[ 1 0 0 1 185 610 ] concat
%I
[
(e2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-o-normal--*-180-*
Helvetica-Oblique 18 SetF
%I t
[ 1 0 0 1 62 536 ] concat
%I
[
(e3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-o-normal--*-180-*
Helvetica-Oblique 18 SetF
%I t
[ 1 0 0 1 87 597 ] concat
%I
[
(e4)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-o-normal--*-180-*
Helvetica-Oblique 18 SetF
%I t
[ 1 0 0 1 355 555 ] concat
%I
[
(e5)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-o-normal--*-180-*
Helvetica-Oblique 18 SetF
%I t
[ 1 0 0 1 210 556 ] concat
%I
[
(4)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-o-normal--*-180-*
Helvetica-Oblique 18 SetF
%I t
[ 1 0 0 1 95 453 ] concat
%I
[
(e7)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-o-normal--*-180-*
Helvetica-Oblique 18 SetF
%I t
[ 1 0 0 1 230 553 ] concat
%I
[
(e6)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-o-normal--*-180-*
Helvetica-Oblique 18 SetF
%I t
[ 1 0 0 1 253 464 ] concat
%I
[
(e8)
] Text
End

End %I eop

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 342 260 ] concat
%I
94 325 172 367 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 342 260 ] concat
%I
172 367 204 190 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 342 260 ] concat
%I
94 324 101 209 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 342 260 ] concat
%I
204 190 371 229 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 342 260 ] concat
%I
371 229 411 358 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 342 260 ] concat
%I
173 366 303 352 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-o-normal--*-180-*
Helvetica-Oblique 18 SetF
%I t
[ 1 0 0 1 515 550 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-o-normal--*-180-*
Helvetica-Oblique 18 SetF
%I t
[ 1 0 0 1 424 536 ] concat
%I
[
(2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-o-normal--*-180-*
Helvetica-Oblique 18 SetF
%I t
[ 1 0 0 1 462 623 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-o-normal--*-180-*
Helvetica-Oblique 18 SetF
%I t
[ 1 0 0 1 570 641 ] concat
%I
[
(2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-o-normal--*-180-*
Helvetica-Oblique 18 SetF
%I t
[ 1 0 0 1 720 569 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-o-normal--*-180-*
Helvetica-Oblique 18 SetF
%I t
[ 1 0 0 1 634 492 ] concat
%I
[
(6)
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 -75 1354 a Fi(Figure)k(3.2:)k(Illustration)11 b(of)i(Krusk)n(al's)f
(MST)h(algorithm:)i(On)e(the)h(left)e(is)h(the)h(original)d(graph)h
(with)h(sorted)h(edges.)19 b(On)-75 1404 y(the)14 b(righ)o(t)g(is)g
(the)g(MST)g(found)g(b)o(y)f(Krusk)n(al's)h(algorithm.)-75
1573 y Fb(3.2.2)55 b(Union-Find)19 b(Data)f(Structure)-75
1681 y Fi(Giv)o(en)10 b(an)g(undirected)h(graph)g Fj(G)g
Fi(=)h(\()p Fj(V)r(;)7 b(E)r Fi(\))j(and)g(a)g(partition)g(of)f
Fj(V)h Fi(,)g(w)o(e)h(need)g(the)g(follo)o(wing)c(t)o(w)o(o)j
(functions)h(to)f(implem)o(en)o(t)-75 1730 y(step)15
b(2)e(of)h(Krusk)n(al's')f(algorithm:)-24 1856 y(1.)20
b Fn(\014ndset\(v\))p Fi(:)15 b(it)e(returns)j(the)e(set)h(of)e(whic)o
(h)h Fj(v)i Fi(is)d(a)h(mem)o(b)q(er.)-24 1945 y(2.)20
b Fn(union\()p Fj(s)186 1951 y Ff(1)202 1945 y Fj(;)7
b(s)240 1951 y Ff(2)259 1945 y Fn(\))p Fi(:)17 b(it)d(com)o(bines)f
(the)h(t)o(w)o(o)g(sets)h Fj(s)778 1951 y Ff(1)811 1945
y Fi(and)e Fj(s)910 1951 y Ff(2)929 1945 y Fi(.)-75 2071
y(No)o(w)h(w)o(e)g(re-write)g(the)h(step)g(2)e(of)h(Krusk)n(al's)f
(algorithm)e(as)j(follo)o(wing:)14 2196 y Fn(for)f Fi(eac)o(h)h(edge)h
Fj(e)293 2202 y Fd(i)318 2196 y Fi(=)d(\()p Fj(u;)7 b(v)q
Fi(\),)14 b Fj(i)e Fi(=)f(1)p Fj(;)c Fi(2)p Fj(;)g(:)g(:)g(:)t(;)g(m)14
b Fn(do)103 2246 y Fj(s)122 2252 y Ff(1)155 2246 y Fi(=)g(\014ndset\()p
Fj(u)p Fi(\))103 2296 y Fj(s)122 2302 y Ff(2)155 2296
y Fi(=)g(\014ndset\()p Fj(v)q Fi(\))103 2346 y Fn(if)e
Fj(s)163 2352 y Ff(1)194 2346 y Fi(=)g Fj(s)257 2352
y Ff(2)290 2346 y Fn(then)192 2396 y Fi(do)h(nothing)103
2446 y Fn(else)192 2495 y Fi(union\()p Fj(s)329 2501
y Ff(1)347 2495 y Fj(;)7 b(s)385 2501 y Ff(2)404 2495
y Fi(\))192 2545 y Fj(T)17 b Fi(=)12 b Fj(T)j Fh([)9
b(f)p Fj(e)393 2551 y Fd(i)407 2545 y Fh(g)103 2595 y
Fn(endif)p eop
%%Page: 3 3
3 2 bop 75 -130 a Fg(Lecture)16 b(3:)h(Jan)o(uary)d(28)1492
b Fi(3-3)75 136 y(One)14 b(implemen)o(tation)d(of)i(Union-Find)f(is)i
(as)g(follo)o(ws.)i(Eac)o(h)e(set)h(is)e(a)g(link)o(ed)g(list)h(as)f
(sho)o(wn)h(in)f(\014gure)i(3.3.)i(Eac)o(h)d(set)g(is)75
186 y(iden)o(ti\014ed)h(b)o(y)f(its)h(leading)e(no)q(de.)21
b(Eac)o(h)15 b(no)q(de)g(has)f(a)g(p)q(oin)o(ter)h(p)q(oin)o(ting)f(to)
g(the)h(leading)f(no)q(de)h(in)f(the)h(same)f(set.)21
b(Eac)o(h)75 236 y(set)15 b(has)e(a)h(p)q(oin)o(ter)g(p)q(oin)o(ting)e
(to)i(the)g(tail)f(of)g(the)h(link)o(ed)f(list.)18 b(W)m(e)13
b(also)g(ha)o(v)o(e)g(an)h(arra)o(y)f(of)g(v)o(ertices,)i(where)g(eac)o
(h)f(v)o(ertex)75 286 y(has)f(a)g(p)q(oin)o(ter)g(p)q(oin)o(ting)e(to)i
(the)h(corresp)q(onding)f(no)q(de)h(in)e(the)i(link)o(ed)e(list.)17
b(This)c(data)f(structure)j(allo)o(ws)d Fj(O)q Fi(\(1\))h(time)e(for)75
336 y Fj(f)t(indset)p Fi(\()p Fj(u)p Fi(\).)24 b(F)m(or)15
b Fj(union)p Fi(\()p Fj(s)524 342 y Ff(1)543 336 y Fj(;)7
b(s)581 342 y Ff(2)600 336 y Fi(\),)15 b(w)o(e)h(alw)o(a)o(ys)e(app)q
(end)i(a)f(smaller)f(set)i(to)f(the)h(larger)g(set,)g(b)o(y)f(up)q
(dating)g(the)h(p)q(oin)o(ters.)75 385 y(Therefore)f
Fj(union)p Fi(\()p Fj(s)406 391 y Ff(1)425 385 y Fj(;)7
b(s)463 391 y Ff(2)482 385 y Fi(\))14 b(tak)o(es)g Fj(O)q
Fi(\(min)n(\()p Fj(siz)r(e)p Fi(\()p Fj(s)860 391 y Ff(1)881
385 y Fi(\))p Fj(;)7 b(siz)r(e)p Fi(\()p Fj(s)1024 391
y Ff(2)1044 385 y Fi(\)\)\).)75 465 y(The)12 b(total)f(time)g(required)
h(for)g(step)g(2)g(in)f(Krusk)n(al's)h(algorithm,)d(using)i
Fj(f)t(indset)p Fi(\()p Fj(u)p Fi(\))i(and)f Fj(union)p
Fi(\()p Fj(s)1648 471 y Ff(1)1667 465 y Fj(;)7 b(s)1705
471 y Ff(2)1724 465 y Fi(\),)12 b(is)f(as)h(follo)o(wing:)75
514 y Fe(P)119 557 y Fd(unions)239 545 y Fi(size)j(of)e(smaller)f(set)j
(in)f(the)g(union)f(=)855 514 y Fe(P)898 557 y Fd(u)p
Fc(2)p Fd(V)969 545 y Fi(n)o(um)o(b)q(er)g(of)h(unions)f
Fj(u)h Fi(w)o(as)g(in)f(the)i(smaller)d(set)j(=)f Fj(O)q
Fi(\()p Fj(n)7 b Fi(log)f Fj(n)p Fi(\).)75 691 y Fb(3.2.3)55
b(Complexit)n(y)16 b(of)j(Krusk)m(al's)f(Algorithm)75
798 y Fi(The)f(sorting)f(step)h(tak)o(es)g Fj(O)q Fi(\()p
Fj(m)7 b Fi(log)f Fj(m)p Fi(\))16 b(=)g Fj(O)q Fi(\()p
Fj(m)7 b Fi(log)g Fj(n)p Fi(\).)25 b(The)17 b(step)g(2)f(tak)o(es)h
Fj(O)q Fi(\()p Fj(n)7 b Fi(log)f Fj(n)p Fi(\).)25 b(Therefore)17
b(the)g(o)o(v)o(erall)e(time)75 848 y(complexit)o(y)d(is)i
Fj(O)q Fi(\(\()p Fj(m)c Fi(+)f Fj(n)p Fi(\))e(log)g Fj(n)p
Fi(\).)75 994 y Fb(3.2.4)55 b(Correctness)18 b(of)h(Krusk)m(al's)f
(Algorithm)75 1100 y Fn(Theorem)d(3.5)20 b Fl(Given)i(an)g(undir)n(e)n
(cte)n(d)f(gr)n(aph)g Fj(G)i Fi(=)g(\()p Fj(V)r(;)7 b(E)r
Fi(\))p Fl(,)23 b(the)e(output)h Fj(T)27 b Fl(of)21 b(Kruskal's)g
(algorithm)f(on)i Fj(G)f Fl(is)g(a)75 1150 y(minimum)15
b(sp)n(anning)h(tr)n(e)n(e)e(of)h Fj(G)p Fl(.)75 1270
y Fn(Pro)q(of:)i Fi(W)m(e)12 b(only)g(need)i(to)e(pro)o(v)o(e)h(that)g
(at)f(an)o(y)g(p)q(oin)o(t,)g(the)h(curren)o(t)h Fj(T)19
b Fi(is)13 b(con)o(tained)f(in)g(some)g(MST)h(of)f Fj(G)p
Fi(.)17 b(This)c(is)f(true)75 1320 y(at)k(the)i(b)q(eginning,)e(b)q
(ecause)i Fj(T)k Fi(=)17 b Fh(;)p Fi(.)26 b(Assume)16
b(there)i(exists)g(an)e(in)o(termediate)g(state)h(that)g
Fj(T)22 b Fi(is)17 b(con)o(tained)g(in)f(some)75 1370
y(MST)d(of)f Fj(G)g Fi(while)g Fj(T)h Fh([)7 b(f)p Fj(e)p
Fh(g)12 b Fi(is)h Fl(not)g Fi(con)o(tained)g(in)f(an)o(y)g(MST)h(of)f
Fj(G)p Fi(,)g(where)i Fj(e)f Fi(is)f(the)i(minim)n(um)8
b(w)o(eigh)o(t)13 b(in)o(ter-comp)q(onen)o(t)75 1420
y(edge.)27 b(Let)17 b Fj(S)j Fi(b)q(e)d(an)g(MST)g(con)o(taining)e
Fj(T)23 b Fi(but)17 b(not)f Fj(e)p Fi(.)27 b(No)o(w)17
b Fj(S)d Fh([)c(f)p Fj(e)p Fh(g)17 b Fi(con)o(tains)g(a)f(cycle)i
Fj(C)s Fi(.)26 b(The)17 b(edge)g Fj(e)g Fi(is)g(on)f(the)75
1470 y(cycle,)g(b)q(ecause)h Fj(S)h Fi(is)d(a)f(tree.)23
b(Moreo)o(v)o(er,)16 b(the)g(cycle)g Fj(C)h Fi(m)o(ust)e(con)o(tain)f
(at)h(least)h(one)f(more)f(in)o(ter-comp)q(onen)o(t)h(edge)g
Fj(e)2001 1455 y Fc(0)2013 1470 y Fi(.)75 1520 y(The)i(set)f
Fj(S)256 1504 y Fc(0)284 1520 y Fi(=)g Fj(S)d Fh([)d(f)p
Fj(e)p Fh(g)h(n)f(f)p Fj(e)551 1504 y Fc(0)563 1520 y
Fh(g)16 b Fi(is)g(a)g(spanning)f(tree.)26 b(Since)17
b Fj(e)f Fi(is)g(the)g(minim)o(um)11 b(w)o(eigh)o(t)16
b(in)o(tercomp)q(onen)o(t)g(edge)g(then)75 1569 y Fj(w)q
Fi(\()p Fj(e)p Fi(\))e Fh(\024)g Fj(w)q Fi(\()p Fj(e)283
1554 y Fc(0)295 1569 y Fi(\).)22 b(Therefore,)17 b Fj(w)q
Fi(\()p Fj(S)621 1554 y Fc(0)633 1569 y Fi(\))d Fh(\024)g
Fj(w)q Fi(\()p Fj(S)r Fi(\))i(hence)h Fj(S)959 1554 y
Fc(0)986 1569 y Fi(is)e(a)g(spanning)g(tree)i(of)d Fj(G)h
Fi(with)g(less)h(or)f(equal)g(w)o(eigh)o(t.)21 b(If)15
b(it)g(is)75 1619 y(strictly)g(less,)h(this)f(con)o(tradicts)h
Fj(S)h Fi(b)q(eing)e(an)g(MST.)g(If)f(equalit)o(y)h(holds,)f(w)o(e)h
(get)h(another)f(MST)g Fj(S)1679 1604 y Fc(0)1707 1619
y Fi(that)g(do)q(es)g(con)o(tain)75 1669 y Fj(T)g Fh([)9
b(f)p Fj(e)p Fh(g)p Fi(.)p 2001 1669 24 24 v 75 1749
a Fn(Note)p Fi(:)18 b(An)c(alternativ)o(e)g(MST)g(algorithm)e
(\(\\Prims)h(Algorithm"\))e(is)j(to)g(k)o(eep)h(on)f(gro)o(wing)f(a)g
(connected)j(acyclic)e(com-)75 1799 y(p)q(onen)o(t)g(b)o(y)g(adding)f
(minim)n(um)d(w)o(eigh)o(t)j(edge.)75 1945 y Fb(3.2.5)55
b(Blue)18 b(and)h(Red)f(Rules)75 2051 y Fn(De\014nitio)o(n)13
b(3.6)21 b Fl(A)c Fn(cut)g Fl(of)h(an)g(undir)n(e)n(cte)n(d)g(gr)n(aph)
g Fj(G)f Fi(=)g(\()p Fj(V)r(;)7 b(E)r Fi(\))18 b Fl(is)f(a)h(bip)n
(artition)f(of)h(the)g(no)n(des)g Fi(\()p Fj(X)q(;)7
b(V)21 b Fh(\000)12 b Fj(X)s Fi(\))p Fl(.)28 b(The)75
2101 y(e)n(dges)15 b(of)g(the)g(cut)g(\(\\cr)n(oss)g(e)n(dges"\))g(ar)n
(e)g(al)r(l)f(e)n(dges)h Fi(\()p Fj(u;)7 b(v)q Fi(\))15
b Fl(such)h(that)f Fj(u)c Fh(2)g Fj(X)s Fl(,)k Fj(v)f
Fh(2)d Fj(V)18 b Fh(\000)10 b Fj(X)s Fl(.)137 2262 y
Fh(\017)21 b Fn(Blue)16 b(rule)p Fi(:)i(Cho)q(ose)e(a)e(cut)i(without)f
(blue)g(edges.)22 b(Pic)o(k)15 b(the)h(minim)n(um)11
b(w)o(eigh)o(t)j(edge)i(in)e(the)i(cut)g(and)f(color)f(it)179
2312 y(blue.)137 2395 y Fh(\017)21 b Fn(Red)15 b(rule)p
Fi(:)h(Cho)q(ose)f(a)e(cycle)i(with)e(no)h(red)h(edges.)k(Pic)o(k)13
b(the)i(hea)o(viest)f(edge,)g(color)g(it)g(red.)75 2515
y(An)o(y)f(algorithm)e(that)j(applies)f(the)h(blue)f(and)h(read)g
(rules)g(in)f(some)f(order)i(un)o(til)f Fj(n)8 b Fh(\000)h
Fi(1)k(edges)i(are)e(blue)h(\(or)g Fj(m)8 b Fh(\000)h
Fi(\()p Fj(n)f Fh(\000)h Fi(1\))75 2565 y(edges)15 b(are)f(red\))h(is)f
(an)f(MST)h(algorithm.)75 2645 y(Krusk)n(al's)g(algorithm)d(applies)i
(only)h(the)g(blue)g(rule,)g(in)f(a)h(particular)f(order.)p
eop
%%Page: 4 4
4 3 bop -75 -130 a Fi(3-4)1491 b Fg(Lecture)16 b(3:)i(Jan)o(uary)13
b(28)-75 136 y Fk(3.3)70 b(Subset)22 b(Systems)-75 257
y Fn(De\014nitio)o(n)13 b(3.7)21 b Fl(A)c(subset)g(system)h(is)f
Fj(S)h Fi(=)f(\()p Fj(E)r(;)7 b(\037)p Fi(\))17 b Fl(c)n(onsists)g(of)g
(a)h(set)f(of)g(elements)g Fj(E)j Fl(and)e(a)f(set)g(of)h(subsets)f(of)
g Fj(E)r Fl(,)-75 307 y Fj(\037)12 b Fh(\032)f Fi(2)27
292 y Fd(E)55 307 y Fl(.)19 b(The)c(set)g Fj(\037)f Fl(is)h(close)n(d)g
(under)g(inclusion,)g(namely)g(if)g Fj(I)g Fh(2)c Fj(\037)k
Fl(and)g Fj(J)h Fh(\032)c Fj(I)18 b Fl(then)d Fj(J)h
Fh(2)11 b Fj(\037)-75 428 y Fi(Giv)o(en)17 b(a)h(subset)h(system)f
Fj(S)j Fi(=)d(\()p Fj(E)r(;)7 b(\037)p Fi(\))18 b(and)g(a)f(p)q(ositiv)
o(e)h(w)o(eigh)o(t)g(function)f Fj(w)i Fi(:)f Fj(E)i
Fh(\000)-6 b(!)17 b Fj(R)1415 413 y Ff(+)1443 428 y Fi(,)h(w)o(e)g(ha)o
(v)o(e)g(the)h(follo)o(wing)-75 478 y(optimization)e(problem:)28
b Fl(\014nd)21 b(a)f(\(maximal\))g(subset)h Fj(I)j Fh(2)d
Fj(\037)f Fl(that)g(maximizes)g Fj(w)q Fi(\()p Fj(I)s
Fi(\))i(=)1421 447 y Fe(P)1464 491 y Fd(e)p Fc(2)p Fd(I)1528
478 y Fj(w)q Fi(\()p Fj(e)p Fi(\))p Fl(.)36 b(Note)20
b(that)g(a)-75 528 y(maximal)15 b(sutset)g Fj(I)g Fh(2)c
Fj(\037)k Fl(is)f(such)i(that)e Fh(8)p Fj(e)e Fh(2)g
Fj(E)r Fh(n)p Fj(I)s Fl(,)i Fj(I)f Fh([)c(f)p Fj(e)p
Fh(g)16 b Fj(=)-26 b Fh(2)12 b Fj(\037)p Fl(.)-75 608
y Fi(Note)19 b(that)f(the)h(MST)f(problem)f(is)h(equiv)n(alen)o(t)f(to)
i(the)f(Maxim)o(um-w)n(eigh)o(t)d(spanning)j(tree)i(problem.)29
b(This)18 b(is)h(true,)-75 658 y(b)q(ecause)h(the)e(simple)f
(transformation)f(of)h(edge)i(w)o(eigh)o(ts,)f Fj(w)q
Fi(\()p Fj(e)p Fi(\))h(=)g Fj(w)12 b Fh(\000)h Fj(w)q
Fi(\()p Fj(e)p Fi(\),)19 b(where)g Fj(w)g Fi(=)g(max)5
b Fj(w)q Fi(\()p Fj(e)p Fi(\),)19 b(results)g(in)e(a)-75
707 y(graph,)e(where)h(maxim)o(um)10 b(spanning)15 b(trees)i(corresp)q
(ond)g(to)e(minim)n(um)c(spanning)k(trees)i(in)e(the)g(original)f
(graph.)22 b(\(this)-75 757 y(can)c(b)q(e)g(done)g(b)q(ecause)i(the)e
(size)h(of)e(all)f(spannig)i(trees)h(is)f(the)g(same,)f(that)h(is,)g
Fj(n)12 b Fh(\000)g Fi(1\).)29 b(It)18 b(is)g(easy)g(to)g(see)h(that)e
(the)-75 807 y(maxim)n(um)o(-w)o(eig)o(h)o(t)11 b(spanning)j(tree)h
(problem)d(is)i(a)g(sp)q(ecial)g(case)h(of)e(this)h(optimization)d
(problem)i(for)g(subset)i(systems.)-75 953 y Fb(3.3.1)55
b(Greedy)18 b(Algorithm)e(on)j(Subset)g(System)14 1060
y Fn(Algorithm:)f(Greedy-on-Subs)o(et-S)o(ystem\()o Fi(\()p
Fj(E)r(;)7 b(\037)p Fi(\))p Fj(;)f(w)q Fn(\))14 1110
y(step)15 b(0:)j Fj(T)g Fi(=)11 b Fj(\036)p Fi(.)14 1160
y Fn(step)k(1:)j Fi(Sort)c(elemen)o(ts)g(in)f(decreasing)i(w)o(eigh)o
(t:)j Fj(w)q Fi(\()p Fj(e)894 1166 y Ff(1)913 1160 y
Fi(\))12 b Fh(\025)f Fj(w)q Fi(\()p Fj(e)1050 1166 y
Ff(2)1069 1160 y Fi(\))h Fh(\025)g Fj(:)7 b(:)g(:)j Fh(\025)i
Fj(w)q Fi(\()p Fj(e)1311 1166 y Fd(m)1342 1160 y Fi(\).)14
1209 y Fn(step)j(2:)j(for)13 b Fi(eac)o(h)h Fj(e)355
1215 y Fd(i)381 1209 y Fh(2)d Fj(E)r Fi(,)j Fj(i)e Fi(=)f(1)p
Fj(;)c Fi(2)p Fj(;)g(:)g(:)g(:)t(;)g(m)14 b Fn(do)280
1259 y(if)f Fj(T)i Fh([)9 b(f)p Fj(e)438 1265 y Fd(i)452
1259 y Fh(g)i(2)h Fj(\037)h Fn(then)369 1309 y Fj(T)18
b Fi(=)12 b Fj(T)j Fh([)9 b(f)p Fj(e)571 1315 y Fd(i)585
1309 y Fh(g)p Fi(.)280 1359 y Fn(endif)-75 1530 y(Example:)22
b Fi(F)m(or)15 b(maxim)n(um)d(spanning)j(tree)i(problem,)d
Fj(E)k Fi(is)e(the)g(set)h(of)e(all)f(edges,)j Fj(\037)f
Fi(is)f(the)i(set)f(of)f(all)g(forests.)25 b(The)-75
1580 y(maxim)o(al)11 b(subsets)k Fj(I)g Fh(2)c Fj(\037)j
Fi(are)h(spanning)e(tree.)-75 1660 y Fn(Note:)18 b Fi(The)d(ab)q(o)o(v)
o(e)e(greedy)i(algorithm)c(do)q(es)k(not)f(w)o(ork)f(on)h(general)g
(subset)h(system)f(problems.)-75 1739 y Fn(Example:)23
b Fi(Let)17 b Fj(E)i Fi(b)q(e)e(the)g(set)h(of)e(edges)h(of)f(an)h
(undirected)h(graph,)e Fj(\037)h Fi(b)q(e)g(the)g(union)f(of)g(no)q
(de-disjoin)o(t)g(paths,)h(and)-75 1789 y Fj(w)q Fi(\()p
Fj(e)p Fi(\))12 b(=)g(1)h(for)f(all)g(edges.)19 b(The)14
b(subset)g(system)f(optimization)e(problem)h(is)h(equiv)n(alen)o(t)f
(to)h(Hamiltonian-pa)o(th)e(problem,)-75 1839 y(whic)o(h)j(is)g
(NP-hard.)-75 2006 y Fk(References)-37 2114 y Fi([CLR93])45
b Fa(T.H.)12 b(Cormen)p Fi(,)e Fa(C.E.)h(Leiserson)g
Fi(and)f Fa(R.L.)i(Rivest)p Fi(,)e(\\In)o(tro)q(duction)g(to)g
(Algorithms",)e Fl(T)m(enth)j(Print-)161 2164 y(ing)p
Fi(,)j(1993.)-38 2247 y([P)o(aSt82])46 b Fa(C.H.)13 b(P)l(ap)m
(adimitriou)e Fi(and)g Fa(K.)i(Steiglitz)p Fi(,)c(\\Com)o(binatorial)f
(Optimization:)14 b(Algorithms)9 b(and)i(Com-)161 2296
y(plexit)o(y",)i Fl(Pr)n(entic)n(e)h(Hal)r(l)f Fi(,)h(1982.)p
eop
%%Page: 5 5
5 4 bop 75 -130 a Fg(Lecture)16 b(3:)h(Jan)o(uary)d(28)1492
b Fi(3-5)525 218 y
 16577003 18566243 723599 14998241 29799137 47691776 startTexFig
 525 218 a
%%BeginDocument: figs/set.ps

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


/arrowHeight 11 def
/arrowWidth 5 def

/IdrawDict 52 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica-Oblique reencodeISO def
/Times-Italic reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def


%I Idraw 10 Grid 8 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.754552 0 0 0.754552 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-o-normal--*-180-*
Helvetica-Oblique 18 SetF
%I t
[ 1 0 0 1 88 873 ] concat
%I
[
(size1)
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -195 51 ] concat
%I
275 797 331 861 Rect
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -195 51 ] concat
%I
275 829 331 829 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-o-normal--*-180-*
Helvetica-Oblique 18 SetF
%I t
[ 1 0 0 1 192 905 ] concat
%I
[
(node1)
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -195 51 ] concat
%I
379 829 443 861 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-o-normal--*-180-*
Helvetica-Oblique 18 SetF
%I t
[ 1 0 0 1 312 905 ] concat
%I
[
(node2)
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -195 51 ] concat
%I
499 829 571 861 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-o-normal--*-180-*
Helvetica-Oblique 18 SetF
%I t
[ 1 0 0 1 432 913 ] concat
%I
[
(..........)
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -195 51 ] concat
%I
731 829 795 861 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -195 51 ] concat
%I
275 677 331 741 Rect
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -195 51 ] concat
%I
275 709 331 709 Line
%I 1
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -195 51 ] concat
%I
379 709 443 741 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -195 51 ] concat
%I
499 709 571 741 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -195 51 ] concat
%I
627 709 691 741 Rect
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -195 51 ] concat
%I
331 845 379 845 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -195 51 ] concat
%I
443 845 499 845 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -195 51 ] concat
%I
571 845 619 845 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -195 51 ] concat
%I
683 845 731 845 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -195 51 ] concat
%I
331 725 379 725 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -195 51 ] concat
%I
443 725 499 725 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -195 51 ] concat
%I
571 725 627 725 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-o-normal--*-180-*
Helvetica-Oblique 18 SetF
%I t
[ 1 0 0 1 16 897 ] concat
%I
[
(1st set)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-o-normal--*-180-*
Helvetica-Oblique 18 SetF
%I t
[ 1 0 0 1 16 769 ] concat
%I
[
(2nd set)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-o-normal--*-180-*
Helvetica-Oblique 18 SetF
%I t
[ 1 0 0 1 88 753 ] concat
%I
[
(size2)
] Text
End

Begin %I BSpl
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -195 51 ] concat
%I 5
539 861
523 877
483 885
443 877
427 861
5 BSpl
%I 1
End

Begin %I BSpl
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -195 51 ] concat
%I 5
763 861
699 893
587 909
459 893
411 861
5 BSpl
%I 1
End

Begin %I BSpl
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -195 51 ] concat
%I 5
531 741
499 757
459 757
427 749
419 741
5 BSpl
%I 1
End

Begin %I BSpl
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -195 51 ] concat
%I 6
659 741
611 773
547 781
475 781
419 757
411 741
6 BSpl
%I 1
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -195 51 ] concat
%I
275 277 331 645 Rect
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -195 51 ] concat
%I
275 629 331 629 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -195 51 ] concat
%I
275 613 331 613 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -195 51 ] concat
%I
275 597 331 597 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -195 51 ] concat
%I
275 293 331 293 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-o-normal--*-180-*
Helvetica-Oblique 18 SetF
%I t
[ 1 0 0 1 64 345 ] concat
%I
[
(n)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-o-normal--*-180-*
Helvetica-Oblique 18 SetF
%I t
[ 1 0 0 1 64 697 ] concat
%I
[
(1)
(2)
(3)
()
()
()
()
(.)
(.)
(.)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-o-normal--*-180-*
Helvetica-Oblique 18 SetF
%I t
[ 1 0 0 1 104 321 ] concat
%I
[
(V)
] Text
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -195 51 ] concat
%I
275 453 331 453 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -195 51 ] concat
%I
275 437 331 437 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -195 51 ] concat
%I
339 445 531 701 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal--*-180-*
Times-Italic 18 SetF
%I t
[ 1 0 0 1 256 633 ] concat
%I
[
(a pointer pointing to the node in the linked list)
] Text
End

Begin %I BSpl
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -195 51 ] concat
%I 5
331 837
395 813
539 805
715 813
771 829
5 BSpl
%I 1
End

Begin %I BSpl
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -195 51 ] concat
%I 4
331 717
435 677
611 677
667 709
4 BSpl
%I 1
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 630 1485 a Fi(Figure)14 b(3.3:)j(Data)c(structures)j(for)e(partition)f
(of)g Fj(V)d Fi(.)525 1772 y
 16577003 10277740 11051335 39205928 25457541 48218030 startTexFig
 525 1772 a
%%BeginDocument: figs/cut.ps

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


/arrowHeight 11 def
/arrowWidth 5 def

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Times-Italic reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def


%I Idraw 10 Grid 8 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.754552 0 0 0.754552 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -195 51 ] concat
%I
451 837 32 72 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 29 51 ] concat
%I
451 837 32 72 Elli
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -195 51 ] concat
%I
467 893 659 893 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -195 51 ] concat
%I
475 869 651 869 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -195 51 ] concat
%I
483 845 643 845 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -195 51 ] concat
%I
483 821 651 821 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -195 51 ] concat
%I
475 789 659 789 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal--*-180-*
Times-Italic 18 SetF
%I t
[ 1 0 0 1 248 809 ] concat
%I
[
(X)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal--*-180-*
Times-Italic 18 SetF
%I t
[ 1 0 0 1 464 809 ] concat
%I
[
(V-X)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal--*-180-*
Times-Italic 18 SetF
%I t
[ 1 0 0 1 320 969 ] concat
%I
[
(crossing edges)
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 755 2514 a Fi(Figure)k(3.4:)j(Illustration)c(of)g(a)h
Fn(cut)p Fi(.)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
